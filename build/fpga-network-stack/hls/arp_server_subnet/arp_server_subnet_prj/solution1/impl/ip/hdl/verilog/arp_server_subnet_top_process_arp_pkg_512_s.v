// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module arp_server_subnet_top_process_arp_pkg_512_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        arpDataIn_internal_dout,
        arpDataIn_internal_empty_n,
        arpDataIn_internal_read,
        myIpAddress_dout,
        myIpAddress_empty_n,
        myIpAddress_read,
        myIpAddress_c_din,
        myIpAddress_c_full_n,
        myIpAddress_c_write,
        arpTableInsertFifo_din,
        arpTableInsertFifo_full_n,
        arpTableInsertFifo_write,
        arpReplyMetaFifo_din,
        arpReplyMetaFifo_full_n,
        arpReplyMetaFifo_write,
        regRequestCount,
        regRequestCount_ap_vld,
        regReplyCount,
        regReplyCount_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [1023:0] arpDataIn_internal_dout;
input   arpDataIn_internal_empty_n;
output   arpDataIn_internal_read;
input  [31:0] myIpAddress_dout;
input   myIpAddress_empty_n;
output   myIpAddress_read;
output  [31:0] myIpAddress_c_din;
input   myIpAddress_c_full_n;
output   myIpAddress_c_write;
output  [80:0] arpTableInsertFifo_din;
input   arpTableInsertFifo_full_n;
output   arpTableInsertFifo_write;
output  [127:0] arpReplyMetaFifo_din;
input   arpReplyMetaFifo_full_n;
output   arpReplyMetaFifo_write;
output  [15:0] regRequestCount;
output   regRequestCount_ap_vld;
output  [15:0] regReplyCount;
output   regReplyCount_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg arpDataIn_internal_read;
reg myIpAddress_read;
reg myIpAddress_c_write;
reg arpTableInsertFifo_write;
reg arpReplyMetaFifo_write;
reg[15:0] regRequestCount;
reg regRequestCount_ap_vld;
reg[15:0] regReplyCount;
reg regReplyCount_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire   [0:0] tmp_i_nbreadreq_fu_128_p3;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] tmp_i_reg_511;
reg   [0:0] tmp_i_reg_511_pp0_iter2_reg;
reg   [0:0] tmp_last_V_reg_521;
reg   [0:0] tmp_last_V_reg_521_pp0_iter2_reg;
reg   [0:0] icmp_ln1064_reg_538;
reg   [15:0] p_Result_i_reg_542;
reg    ap_predicate_op73_write_state4;
reg    ap_predicate_op80_write_state4;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] header_ready;
reg   [15:0] header_idx;
reg   [335:0] header_header_V;
reg   [15:0] pag_requestCounter_V;
reg   [15:0] pag_replyCounter_V;
reg    myIpAddress_blk_n;
wire    ap_block_pp0_stage0;
reg    myIpAddress_c_blk_n;
reg    arpDataIn_internal_blk_n;
reg    arpReplyMetaFifo_blk_n;
reg    arpTableInsertFifo_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_i_reg_511_pp0_iter1_reg;
reg   [1023:0] arpDataIn_internal_read_reg_515;
wire   [0:0] tmp_last_V_fu_250_p3;
reg   [0:0] tmp_last_V_reg_521_pp0_iter1_reg;
wire   [335:0] p_Result_s_fu_364_p2;
wire   [0:0] header_ready_load_load_fu_258_p1;
wire   [0:0] icmp_ln1064_fu_405_p2;
wire   [15:0] p_Result_i_fu_411_p4;
reg   [31:0] p_Result_2_i_reg_546;
reg   [47:0] tmp_3_i_reg_551;
reg   [47:0] p_Result_1_i_reg_556;
reg   [79:0] tmp_2_i_reg_561;
reg   [0:0] ap_phi_mux_header_ready_flag_0_i_phi_fu_187_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_header_ready_flag_0_i_reg_184;
reg   [15:0] ap_phi_mux_header_idx_new_0_i_phi_fu_198_p4;
wire   [15:0] add_ln67_fu_376_p2;
wire   [15:0] ap_phi_reg_pp0_iter1_header_idx_new_0_i_reg_195;
reg   [0:0] ap_phi_mux_header_ready_flag_1_i_phi_fu_209_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_header_ready_flag_1_i_reg_205;
reg   [0:0] ap_phi_reg_pp0_iter1_header_ready_flag_1_i_reg_205;
reg   [0:0] ap_phi_mux_header_ready_new_1_i_phi_fu_221_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_header_ready_new_1_i_reg_217;
reg   [0:0] ap_phi_reg_pp0_iter1_header_ready_new_1_i_reg_217;
reg   [15:0] ap_phi_mux_header_idx_new_1_i_phi_fu_233_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_header_idx_new_1_i_reg_229;
reg   [15:0] ap_phi_reg_pp0_iter1_header_idx_new_1_i_reg_229;
wire   [335:0] ap_phi_reg_pp0_iter0_p_Val2_1_reg_241;
reg   [335:0] ap_phi_reg_pp0_iter1_p_Val2_1_reg_241;
reg   [335:0] ap_phi_reg_pp0_iter2_p_Val2_1_reg_241;
wire   [15:0] add_ln885_fu_498_p2;
wire   [15:0] add_ln885_1_fu_474_p2;
reg    ap_block_pp0_stage0_01001;
reg   [15:0] regReplyCount_preg;
reg   [15:0] regRequestCount_preg;
wire   [24:0] shl_ln_fu_270_p3;
wire   [0:0] trunc_ln414_fu_287_p1;
wire   [0:0] icmp_ln414_fu_281_p2;
wire   [335:0] st6_fu_290_p3;
wire   [335:0] tmp_1_fu_278_p1;
wire   [335:0] select_ln414_fu_298_p3;
reg   [335:0] tmp_fu_306_p4;
wire   [335:0] select_ln414_2_fu_324_p3;
wire   [335:0] select_ln414_3_fu_332_p3;
wire   [335:0] and_ln414_fu_340_p2;
wire   [335:0] xor_ln414_fu_346_p2;
wire   [335:0] select_ln414_1_fu_316_p3;
wire   [335:0] and_ln414_1_fu_352_p2;
wire   [335:0] and_ln414_2_fu_358_p2;
wire   [31:0] p_Result_9_i_fu_395_p4;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_213;
reg    ap_condition_202;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 header_ready = 1'd0;
#0 header_idx = 16'd0;
#0 header_header_V = 336'd22969770278074827527357335424865723297445183488;
#0 pag_requestCounter_V = 16'd0;
#0 pag_replyCounter_V = 16'd0;
#0 regReplyCount_preg = 16'd0;
#0 regRequestCount_preg = 16'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        regReplyCount_preg <= 16'd0;
    end else begin
        if (((p_Result_i_reg_542 == 16'd512) & (icmp_ln1064_reg_538 == 1'd1) & (tmp_last_V_reg_521_pp0_iter2_reg == 1'd1) & (tmp_i_reg_511_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
            regReplyCount_preg <= add_ln885_1_fu_474_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        regRequestCount_preg <= 16'd0;
    end else begin
        if (((p_Result_i_reg_542 == 16'd256) & (icmp_ln1064_reg_538 == 1'd1) & (tmp_last_V_reg_521_pp0_iter2_reg == 1'd1) & (tmp_i_reg_511_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
            regRequestCount_preg <= add_ln885_fu_498_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_213)) begin
        if (((tmp_i_nbreadreq_fu_128_p3 == 1'd1) & (tmp_last_V_fu_250_p3 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_header_idx_new_1_i_reg_229 <= 16'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_header_idx_new_1_i_reg_229 <= ap_phi_reg_pp0_iter0_header_idx_new_1_i_reg_229;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_213)) begin
        if (((tmp_i_nbreadreq_fu_128_p3 == 1'd1) & (tmp_last_V_fu_250_p3 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_header_ready_flag_1_i_reg_205 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_header_ready_flag_1_i_reg_205 <= ap_phi_reg_pp0_iter0_header_ready_flag_1_i_reg_205;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_213)) begin
        if (((tmp_i_nbreadreq_fu_128_p3 == 1'd1) & (tmp_last_V_fu_250_p3 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_header_ready_new_1_i_reg_217 <= 1'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_header_ready_new_1_i_reg_217 <= ap_phi_reg_pp0_iter0_header_ready_new_1_i_reg_217;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_202)) begin
        if (((tmp_i_reg_511 == 1'd1) & (header_ready_load_load_fu_258_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_p_Val2_1_reg_241 <= p_Result_s_fu_364_p2;
        end else if (((tmp_i_reg_511 == 1'd1) & (header_ready_load_load_fu_258_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter2_p_Val2_1_reg_241 <= header_header_V;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_p_Val2_1_reg_241 <= ap_phi_reg_pp0_iter1_p_Val2_1_reg_241;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_p_Val2_1_reg_241 <= ap_phi_reg_pp0_iter0_p_Val2_1_reg_241;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_nbreadreq_fu_128_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        arpDataIn_internal_read_reg_515 <= arpDataIn_internal_dout;
        tmp_last_V_reg_521 <= arpDataIn_internal_dout[32'd576];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_reg_511 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (header_ready_load_load_fu_258_p1 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_header_V <= p_Result_s_fu_364_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_reg_511 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_header_ready_flag_1_i_phi_fu_209_p4 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_idx <= ap_phi_mux_header_idx_new_1_i_phi_fu_233_p4;
        header_ready <= ap_phi_mux_header_ready_new_1_i_phi_fu_221_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_last_V_reg_521_pp0_iter1_reg == 1'd1) & (tmp_i_reg_511_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1064_reg_538 <= icmp_ln1064_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((p_Result_i_fu_411_p4 == 16'd256) & (icmp_ln1064_fu_405_p2 == 1'd1) & (tmp_last_V_reg_521_pp0_iter1_reg == 1'd1) & (tmp_i_reg_511_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_1_i_reg_556 <= {{ap_phi_reg_pp0_iter2_p_Val2_1_reg_241[95:48]}};
        tmp_2_i_reg_561 <= {{ap_phi_reg_pp0_iter2_p_Val2_1_reg_241[255:176]}};
    end
end

always @ (posedge ap_clk) begin
    if (((p_Result_i_fu_411_p4 == 16'd512) & (icmp_ln1064_fu_405_p2 == 1'd1) & (tmp_last_V_reg_521_pp0_iter1_reg == 1'd1) & (tmp_i_reg_511_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_2_i_reg_546 <= {{ap_phi_reg_pp0_iter2_p_Val2_1_reg_241[255:224]}};
        tmp_3_i_reg_551 <= {{ap_phi_reg_pp0_iter2_p_Val2_1_reg_241[223:176]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1064_fu_405_p2 == 1'd1) & (tmp_last_V_reg_521_pp0_iter1_reg == 1'd1) & (tmp_i_reg_511_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_i_reg_542 <= {{ap_phi_reg_pp0_iter2_p_Val2_1_reg_241[175:160]}};
    end
end

always @ (posedge ap_clk) begin
    if (((p_Result_i_reg_542 == 16'd512) & (icmp_ln1064_reg_538 == 1'd1) & (tmp_last_V_reg_521_pp0_iter2_reg == 1'd1) & (tmp_i_reg_511_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pag_replyCounter_V <= add_ln885_1_fu_474_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((p_Result_i_reg_542 == 16'd256) & (icmp_ln1064_reg_538 == 1'd1) & (tmp_last_V_reg_521_pp0_iter2_reg == 1'd1) & (tmp_i_reg_511_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pag_requestCounter_V <= add_ln885_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_reg_511 <= tmp_i_nbreadreq_fu_128_p3;
        tmp_i_reg_511_pp0_iter1_reg <= tmp_i_reg_511;
        tmp_last_V_reg_521_pp0_iter1_reg <= tmp_last_V_reg_521;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        tmp_i_reg_511_pp0_iter2_reg <= tmp_i_reg_511_pp0_iter1_reg;
        tmp_last_V_reg_521_pp0_iter2_reg <= tmp_last_V_reg_521_pp0_iter1_reg;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_reg_511 == 1'd1) & (header_ready_load_load_fu_258_p1 == 1'd0))) begin
        ap_phi_mux_header_idx_new_0_i_phi_fu_198_p4 = add_ln67_fu_376_p2;
    end else begin
        ap_phi_mux_header_idx_new_0_i_phi_fu_198_p4 = ap_phi_reg_pp0_iter1_header_idx_new_0_i_reg_195;
    end
end

always @ (*) begin
    if (((tmp_last_V_reg_521 == 1'd0) & (tmp_i_reg_511 == 1'd1))) begin
        ap_phi_mux_header_idx_new_1_i_phi_fu_233_p4 = ap_phi_mux_header_idx_new_0_i_phi_fu_198_p4;
    end else begin
        ap_phi_mux_header_idx_new_1_i_phi_fu_233_p4 = ap_phi_reg_pp0_iter1_header_idx_new_1_i_reg_229;
    end
end

always @ (*) begin
    if ((tmp_i_reg_511 == 1'd1)) begin
        if ((header_ready_load_load_fu_258_p1 == 1'd0)) begin
            ap_phi_mux_header_ready_flag_0_i_phi_fu_187_p4 = 1'd1;
        end else if ((header_ready_load_load_fu_258_p1 == 1'd1)) begin
            ap_phi_mux_header_ready_flag_0_i_phi_fu_187_p4 = 1'd0;
        end else begin
            ap_phi_mux_header_ready_flag_0_i_phi_fu_187_p4 = ap_phi_reg_pp0_iter1_header_ready_flag_0_i_reg_184;
        end
    end else begin
        ap_phi_mux_header_ready_flag_0_i_phi_fu_187_p4 = ap_phi_reg_pp0_iter1_header_ready_flag_0_i_reg_184;
    end
end

always @ (*) begin
    if (((tmp_last_V_reg_521 == 1'd0) & (tmp_i_reg_511 == 1'd1))) begin
        ap_phi_mux_header_ready_flag_1_i_phi_fu_209_p4 = ap_phi_mux_header_ready_flag_0_i_phi_fu_187_p4;
    end else begin
        ap_phi_mux_header_ready_flag_1_i_phi_fu_209_p4 = ap_phi_reg_pp0_iter1_header_ready_flag_1_i_reg_205;
    end
end

always @ (*) begin
    if (((tmp_last_V_reg_521 == 1'd0) & (tmp_i_reg_511 == 1'd1))) begin
        ap_phi_mux_header_ready_new_1_i_phi_fu_221_p4 = 1'd1;
    end else begin
        ap_phi_mux_header_ready_new_1_i_phi_fu_221_p4 = ap_phi_reg_pp0_iter1_header_ready_new_1_i_reg_217;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b0) & (tmp_i_nbreadreq_fu_128_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        arpDataIn_internal_blk_n = arpDataIn_internal_empty_n;
    end else begin
        arpDataIn_internal_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_i_nbreadreq_fu_128_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        arpDataIn_internal_read = 1'b1;
    end else begin
        arpDataIn_internal_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op80_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        arpReplyMetaFifo_blk_n = arpReplyMetaFifo_full_n;
    end else begin
        arpReplyMetaFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op80_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        arpReplyMetaFifo_write = 1'b1;
    end else begin
        arpReplyMetaFifo_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op73_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        arpTableInsertFifo_blk_n = arpTableInsertFifo_full_n;
    end else begin
        arpTableInsertFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op73_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        arpTableInsertFifo_write = 1'b1;
    end else begin
        arpTableInsertFifo_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        myIpAddress_blk_n = myIpAddress_empty_n;
    end else begin
        myIpAddress_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        myIpAddress_c_blk_n = myIpAddress_c_full_n;
    end else begin
        myIpAddress_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        myIpAddress_c_write = 1'b1;
    end else begin
        myIpAddress_c_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        myIpAddress_read = 1'b1;
    end else begin
        myIpAddress_read = 1'b0;
    end
end

always @ (*) begin
    if (((p_Result_i_reg_542 == 16'd512) & (icmp_ln1064_reg_538 == 1'd1) & (tmp_last_V_reg_521_pp0_iter2_reg == 1'd1) & (tmp_i_reg_511_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        regReplyCount = add_ln885_1_fu_474_p2;
    end else begin
        regReplyCount = regReplyCount_preg;
    end
end

always @ (*) begin
    if (((p_Result_i_reg_542 == 16'd512) & (icmp_ln1064_reg_538 == 1'd1) & (tmp_last_V_reg_521_pp0_iter2_reg == 1'd1) & (tmp_i_reg_511_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        regReplyCount_ap_vld = 1'b1;
    end else begin
        regReplyCount_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((p_Result_i_reg_542 == 16'd256) & (icmp_ln1064_reg_538 == 1'd1) & (tmp_last_V_reg_521_pp0_iter2_reg == 1'd1) & (tmp_i_reg_511_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        regRequestCount = add_ln885_fu_498_p2;
    end else begin
        regRequestCount = regRequestCount_preg;
    end
end

always @ (*) begin
    if (((p_Result_i_reg_542 == 16'd256) & (icmp_ln1064_reg_538 == 1'd1) & (tmp_last_V_reg_521_pp0_iter2_reg == 1'd1) & (tmp_i_reg_511_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        regRequestCount_ap_vld = 1'b1;
    end else begin
        regRequestCount_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln67_fu_376_p2 = (header_idx + 16'd1);

assign add_ln885_1_fu_474_p2 = (pag_replyCounter_V + 16'd1);

assign add_ln885_fu_498_p2 = (pag_requestCounter_V + 16'd1);

assign and_ln414_1_fu_352_p2 = (xor_ln414_fu_346_p2 & header_header_V);

assign and_ln414_2_fu_358_p2 = (select_ln414_1_fu_316_p3 & and_ln414_fu_340_p2);

assign and_ln414_fu_340_p2 = (select_ln414_3_fu_332_p3 & select_ln414_2_fu_324_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((myIpAddress_c_full_n == 1'b0) | (myIpAddress_empty_n == 1'b0))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((tmp_i_nbreadreq_fu_128_p3 == 1'd1) & (arpDataIn_internal_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (((ap_predicate_op80_write_state4 == 1'b1) & (arpReplyMetaFifo_full_n == 1'b0)) | ((ap_predicate_op73_write_state4 == 1'b1) & (arpTableInsertFifo_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((myIpAddress_c_full_n == 1'b0) | (myIpAddress_empty_n == 1'b0))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((tmp_i_nbreadreq_fu_128_p3 == 1'd1) & (arpDataIn_internal_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (((ap_predicate_op80_write_state4 == 1'b1) & (arpReplyMetaFifo_full_n == 1'b0)) | ((ap_predicate_op73_write_state4 == 1'b1) & (arpTableInsertFifo_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((myIpAddress_c_full_n == 1'b0) | (myIpAddress_empty_n == 1'b0))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((tmp_i_nbreadreq_fu_128_p3 == 1'd1) & (arpDataIn_internal_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (((ap_predicate_op80_write_state4 == 1'b1) & (arpReplyMetaFifo_full_n == 1'b0)) | ((ap_predicate_op73_write_state4 == 1'b1) & (arpTableInsertFifo_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((tmp_i_nbreadreq_fu_128_p3 == 1'd1) & (arpDataIn_internal_empty_n == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((myIpAddress_c_full_n == 1'b0) | (myIpAddress_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (((ap_predicate_op80_write_state4 == 1'b1) & (arpReplyMetaFifo_full_n == 1'b0)) | ((ap_predicate_op73_write_state4 == 1'b1) & (arpTableInsertFifo_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_202 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_213 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_header_idx_new_1_i_reg_229 = 'bx;

assign ap_phi_reg_pp0_iter0_header_ready_flag_1_i_reg_205 = 'bx;

assign ap_phi_reg_pp0_iter0_header_ready_new_1_i_reg_217 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_1_reg_241 = 'bx;

assign ap_phi_reg_pp0_iter1_header_idx_new_0_i_reg_195 = 'bx;

assign ap_phi_reg_pp0_iter1_header_ready_flag_0_i_reg_184 = 'bx;

always @ (*) begin
    ap_predicate_op73_write_state4 = ((p_Result_i_reg_542 == 16'd512) & (icmp_ln1064_reg_538 == 1'd1) & (tmp_last_V_reg_521_pp0_iter2_reg == 1'd1) & (tmp_i_reg_511_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op80_write_state4 = ((p_Result_i_reg_542 == 16'd256) & (icmp_ln1064_reg_538 == 1'd1) & (tmp_last_V_reg_521_pp0_iter2_reg == 1'd1) & (tmp_i_reg_511_pp0_iter2_reg == 1'd1));
end

assign arpReplyMetaFifo_din = {{tmp_2_i_reg_561}, {p_Result_1_i_reg_556}};

assign arpTableInsertFifo_din = {{{{1'd1}, {tmp_3_i_reg_551}}}, {p_Result_2_i_reg_546}};

assign header_ready_load_load_fu_258_p1 = header_ready;

assign icmp_ln1064_fu_405_p2 = ((p_Result_9_i_fu_395_p4 == myIpAddress_dout) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_281_p2 = ((shl_ln_fu_270_p3 > 25'd335) ? 1'b1 : 1'b0);

assign myIpAddress_c_din = myIpAddress_dout;

assign p_Result_9_i_fu_395_p4 = {{ap_phi_reg_pp0_iter2_p_Val2_1_reg_241[335:304]}};

assign p_Result_i_fu_411_p4 = {{ap_phi_reg_pp0_iter2_p_Val2_1_reg_241[175:160]}};

assign p_Result_s_fu_364_p2 = (and_ln414_2_fu_358_p2 | and_ln414_1_fu_352_p2);

assign select_ln414_1_fu_316_p3 = ((icmp_ln414_fu_281_p2[0:0] == 1'b1) ? tmp_fu_306_p4 : tmp_1_fu_278_p1);

assign select_ln414_2_fu_324_p3 = ((icmp_ln414_fu_281_p2[0:0] == 1'b1) ? 336'd69992023193056381579920071267763883691301421788582797965624659405118495974380029543152421664737722368 : 336'd139984046386112763159840142535527767382602843577165595931249318810236991948760059086304843329475444735);

assign select_ln414_3_fu_332_p3 = ((icmp_ln414_fu_281_p2[0:0] == 1'b1) ? 336'd1 : 336'd139984046386112763159840142535527767382602843577165595931249318810236991948760059086304843329475444735);

assign select_ln414_fu_298_p3 = ((icmp_ln414_fu_281_p2[0:0] == 1'b1) ? st6_fu_290_p3 : tmp_1_fu_278_p1);

assign shl_ln_fu_270_p3 = {{header_idx}, {9'd0}};

assign st6_fu_290_p3 = {{trunc_ln414_fu_287_p1}, {335'd0}};

assign tmp_1_fu_278_p1 = arpDataIn_internal_read_reg_515[335:0];

integer ap_tvar_int_0;

always @ (select_ln414_fu_298_p3) begin
    for (ap_tvar_int_0 = 336 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 335 - 0) begin
            tmp_fu_306_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_fu_306_p4[ap_tvar_int_0] = select_ln414_fu_298_p3[335 - ap_tvar_int_0];
        end
    end
end

assign tmp_i_nbreadreq_fu_128_p3 = arpDataIn_internal_empty_n;

assign tmp_last_V_fu_250_p3 = arpDataIn_internal_dout[32'd576];

assign trunc_ln414_fu_287_p1 = arpDataIn_internal_read_reg_515[0:0];

assign xor_ln414_fu_346_p2 = (336'd139984046386112763159840142535527767382602843577165595931249318810236991948760059086304843329475444735 ^ and_ln414_fu_340_p2);

endmodule //arp_server_subnet_top_process_arp_pkg_512_s
