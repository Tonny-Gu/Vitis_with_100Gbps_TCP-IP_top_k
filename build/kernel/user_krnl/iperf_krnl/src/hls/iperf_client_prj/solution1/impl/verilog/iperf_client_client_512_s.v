// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module iperf_client_client_512_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        regIpAddress9_dout,
        regIpAddress9_empty_n,
        regIpAddress9_read,
        regIpAddress8_dout,
        regIpAddress8_empty_n,
        regIpAddress8_read,
        regIpAddress7_dout,
        regIpAddress7_empty_n,
        regIpAddress7_read,
        regIpAddress6_dout,
        regIpAddress6_empty_n,
        regIpAddress6_read,
        regIpAddress5_dout,
        regIpAddress5_empty_n,
        regIpAddress5_read,
        regIpAddress4_dout,
        regIpAddress4_empty_n,
        regIpAddress4_read,
        regIpAddress3_dout,
        regIpAddress3_empty_n,
        regIpAddress3_read,
        regIpAddress2_dout,
        regIpAddress2_empty_n,
        regIpAddress2_read,
        regIpAddress1_dout,
        regIpAddress1_empty_n,
        regIpAddress1_read,
        regIpAddress0_dout,
        regIpAddress0_empty_n,
        regIpAddress0_read,
        useIpAddr_dout,
        useIpAddr_empty_n,
        useIpAddr_read,
        timeInSeconds_dout,
        timeInSeconds_empty_n,
        timeInSeconds_read,
        packetGap_dout,
        packetGap_empty_n,
        packetGap_read,
        pkgWordCount_dout,
        pkgWordCount_empty_n,
        pkgWordCount_read,
        useConn_dout,
        useConn_empty_n,
        useConn_read,
        dualModeEn_dout,
        dualModeEn_empty_n,
        dualModeEn_read,
        runExperiment_dout,
        runExperiment_empty_n,
        runExperiment_read,
        stopSignalFifo_dout,
        stopSignalFifo_empty_n,
        stopSignalFifo_read,
        txStatusBuffer_dout,
        txStatusBuffer_empty_n,
        txStatusBuffer_read,
        openConStatusBuffer_dout,
        openConStatusBuffer_empty_n,
        openConStatusBuffer_read,
        m_axis_close_connection_TREADY,
        txDataBuffer_din,
        txDataBuffer_full_n,
        txDataBuffer_write,
        txMetaDataBuffer_din,
        txMetaDataBuffer_full_n,
        txMetaDataBuffer_write,
        startSignalFifo_din,
        startSignalFifo_full_n,
        startSignalFifo_write,
        m_axis_open_connection_TREADY,
        m_axis_open_connection_TDATA,
        m_axis_open_connection_TVALID,
        m_axis_close_connection_TDATA,
        m_axis_close_connection_TVALID
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    ap_const_lv32_0 = 32'd0;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] regIpAddress9_dout;
input   regIpAddress9_empty_n;
output   regIpAddress9_read;
input  [31:0] regIpAddress8_dout;
input   regIpAddress8_empty_n;
output   regIpAddress8_read;
input  [31:0] regIpAddress7_dout;
input   regIpAddress7_empty_n;
output   regIpAddress7_read;
input  [31:0] regIpAddress6_dout;
input   regIpAddress6_empty_n;
output   regIpAddress6_read;
input  [31:0] regIpAddress5_dout;
input   regIpAddress5_empty_n;
output   regIpAddress5_read;
input  [31:0] regIpAddress4_dout;
input   regIpAddress4_empty_n;
output   regIpAddress4_read;
input  [31:0] regIpAddress3_dout;
input   regIpAddress3_empty_n;
output   regIpAddress3_read;
input  [31:0] regIpAddress2_dout;
input   regIpAddress2_empty_n;
output   regIpAddress2_read;
input  [31:0] regIpAddress1_dout;
input   regIpAddress1_empty_n;
output   regIpAddress1_read;
input  [31:0] regIpAddress0_dout;
input   regIpAddress0_empty_n;
output   regIpAddress0_read;
input  [15:0] useIpAddr_dout;
input   useIpAddr_empty_n;
output   useIpAddr_read;
input  [31:0] timeInSeconds_dout;
input   timeInSeconds_empty_n;
output   timeInSeconds_read;
input  [7:0] packetGap_dout;
input   packetGap_empty_n;
output   packetGap_read;
input  [7:0] pkgWordCount_dout;
input   pkgWordCount_empty_n;
output   pkgWordCount_read;
input  [13:0] useConn_dout;
input   useConn_empty_n;
output   useConn_read;
input  [0:0] dualModeEn_dout;
input   dualModeEn_empty_n;
output   dualModeEn_read;
input  [0:0] runExperiment_dout;
input   runExperiment_empty_n;
output   runExperiment_read;
input  [0:0] stopSignalFifo_dout;
input   stopSignalFifo_empty_n;
output   stopSignalFifo_read;
input  [31:0] txStatusBuffer_dout;
input   txStatusBuffer_empty_n;
output   txStatusBuffer_read;
input  [95:0] openConStatusBuffer_dout;
input   openConStatusBuffer_empty_n;
output   openConStatusBuffer_read;
input   m_axis_close_connection_TREADY;
output  [1023:0] txDataBuffer_din;
input   txDataBuffer_full_n;
output   txDataBuffer_write;
output  [31:0] txMetaDataBuffer_din;
input   txMetaDataBuffer_full_n;
output   txMetaDataBuffer_write;
output  [0:0] startSignalFifo_din;
input   startSignalFifo_full_n;
output   startSignalFifo_write;
input   m_axis_open_connection_TREADY;
output  [47:0] m_axis_open_connection_TDATA;
output   m_axis_open_connection_TVALID;
output  [15:0] m_axis_close_connection_TDATA;
output   m_axis_close_connection_TVALID;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg regIpAddress9_read;
reg regIpAddress8_read;
reg regIpAddress7_read;
reg regIpAddress6_read;
reg regIpAddress5_read;
reg regIpAddress4_read;
reg regIpAddress3_read;
reg regIpAddress2_read;
reg regIpAddress1_read;
reg regIpAddress0_read;
reg useIpAddr_read;
reg timeInSeconds_read;
reg packetGap_read;
reg pkgWordCount_read;
reg useConn_read;
reg dualModeEn_read;
reg runExperiment_read;
reg stopSignalFifo_read;
reg txStatusBuffer_read;
reg openConStatusBuffer_read;
reg[1023:0] txDataBuffer_din;
reg txDataBuffer_write;
reg[31:0] txMetaDataBuffer_din;
reg txMetaDataBuffer_write;
reg startSignalFifo_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire   [0:0] tmp_5_i_nbreadreq_fu_336_p3;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [3:0] iperfFsmState_load_load_fu_764_p1;
wire   [0:0] grp_nbreadreq_fu_350_p3;
reg    ap_predicate_op107_read_state2;
wire   [0:0] icmp_ln1064_1_fu_1038_p2;
reg    ap_predicate_op141_read_state2;
wire   [0:0] tmp_i_nbreadreq_fu_364_p3;
reg    ap_predicate_op158_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [3:0] iperfFsmState_load_reg_1413;
reg   [0:0] stopSend_load_reg_1421;
reg   [0:0] icmp_ln1064_2_reg_1432;
reg    ap_predicate_op228_write_state3;
reg   [0:0] timeOver_load_reg_1417;
reg    ap_predicate_op235_write_state3;
reg   [0:0] tmp_1_i_reg_1444;
reg   [1:0] tmp_error_V_2_reg_760;
reg    ap_predicate_op240_write_state3;
reg   [0:0] tmp_i_reg_1459;
reg   [0:0] icmp_ln231_reg_1468;
reg    ap_predicate_op248_write_state3;
reg   [0:0] icmp_ln1064_5_reg_1472;
reg    ap_predicate_op250_write_state3;
reg   [0:0] icmp_ln1072_reg_1476;
reg    ap_predicate_op254_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg   [3:0] iperfFsmState_load_reg_1413_pp0_iter2_reg;
reg   [0:0] stopSend_load_reg_1421_pp0_iter2_reg;
reg   [0:0] icmp_ln1064_2_reg_1432_pp0_iter2_reg;
reg    ap_predicate_op255_write_state4;
reg   [0:0] icmp_ln1072_reg_1476_pp0_iter2_reg;
reg    ap_predicate_op256_write_state4;
wire    regslice_both_m_axis_open_connection_U_apdone_blk;
wire    regslice_both_m_axis_close_connection_U_apdone_blk;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_subdone;
reg   [3:0] iperfFsmState;
reg   [13:0] sessionIt_V;
reg   [13:0] closeIt_V;
reg   [13:0] numConnections_V;
reg   [0:0] timeOver;
reg   [0:0] stopSend;
reg   [15:0] currentSessionID_V;
reg   [7:0] wordCount_V;
reg   [3:0] ipAddressIdx_V;
reg   [511:0] header_header_V;
reg   [7:0] packetGapCounter_V;
reg    m_axis_open_connection_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    m_axis_close_connection_TDATA_blk_n;
reg    runExperiment_blk_n;
reg    dualModeEn_blk_n;
reg    useConn_blk_n;
reg    useIpAddr_blk_n;
reg    pkgWordCount_blk_n;
reg    packetGap_blk_n;
reg    timeInSeconds_blk_n;
reg    regIpAddress0_blk_n;
reg    regIpAddress1_blk_n;
reg    regIpAddress2_blk_n;
reg    regIpAddress3_blk_n;
reg    regIpAddress4_blk_n;
reg    regIpAddress5_blk_n;
reg    regIpAddress6_blk_n;
reg    regIpAddress7_blk_n;
reg    regIpAddress8_blk_n;
reg    regIpAddress9_blk_n;
reg    openConStatusBuffer_blk_n;
reg    txMetaDataBuffer_blk_n;
reg    startSignalFifo_blk_n;
reg    txStatusBuffer_blk_n;
reg    txDataBuffer_blk_n;
reg    stopSignalFifo_blk_n;
wire   [1:0] grp_fu_732_p4;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] openTuple_ip_address_V_9_reg_1312;
reg   [31:0] openTuple_ip_address_V_8_reg_1317;
reg   [31:0] openTuple_ip_address_V_7_reg_1322;
reg   [31:0] openTuple_ip_address_V_6_reg_1327;
reg   [31:0] openTuple_ip_address_V_5_reg_1332;
reg   [31:0] openTuple_ip_address_V_4_reg_1337;
reg   [31:0] openTuple_ip_address_V_3_reg_1342;
reg   [31:0] openTuple_ip_address_V_2_reg_1347;
reg   [31:0] openTuple_ip_address_V_1_reg_1352;
reg   [31:0] openTuple_ip_address_V_reg_1357;
reg   [15:0] useIpAddr_read_reg_1362;
reg   [31:0] seconds_V_reg_1367;
reg   [7:0] packetGap_read_reg_1375;
reg   [7:0] pkgWordCount_read_reg_1381;
reg   [7:0] pkgWordCount_read_reg_1381_pp0_iter1_reg;
reg   [13:0] useConn_read_reg_1389;
reg   [0:0] en_reg_1395;
reg   [0:0] runExperiment_read_reg_1400;
reg   [0:0] tmp_5_i_reg_1404;
wire   [0:0] timeOver_load_load_fu_783_p1;
wire   [0:0] stopSend_load_load_fu_787_p1;
reg   [15:0] currentSessionID_V_load_reg_1425;
wire   [0:0] icmp_ln1064_2_fu_799_p2;
wire   [0:0] currWord_last_V_fu_843_p2;
reg   [0:0] currWord_last_V_reg_1439;
wire   [15:0] tmp_sessionID_V_2_fu_879_p1;
reg   [15:0] tmp_sessionID_V_2_reg_1448;
wire   [15:0] tmp_sessionID_V_fu_1072_p1;
reg   [15:0] tmp_sessionID_V_reg_1463;
wire   [0:0] icmp_ln231_fu_1086_p2;
wire   [0:0] grp_fu_755_p2;
wire   [0:0] icmp_ln1072_fu_1110_p2;
reg   [13:0] ap_phi_mux_closeIt_V_loc_0_i_phi_fu_419_p4;
wire   [13:0] add_ln885_4_fu_805_p2;
wire   [13:0] ap_phi_reg_pp0_iter1_closeIt_V_loc_0_i_reg_416;
reg   [7:0] ap_phi_mux_packetGapCounter_V_new_0_i_phi_fu_428_p4;
wire   [7:0] ap_phi_reg_pp0_iter1_packetGapCounter_V_new_0_i_reg_425;
wire   [0:0] icmp_ln1064_fu_1165_p2;
wire   [7:0] add_ln885_fu_1158_p2;
reg   [0:0] ap_phi_mux_sessionIt_V_flag_4_i_phi_fu_438_p30;
wire   [0:0] ap_phi_reg_pp0_iter1_sessionIt_V_flag_4_i_reg_435;
reg   [13:0] ap_phi_mux_sessionIt_V_new_4_i_phi_fu_488_p30;
wire   [13:0] grp_fu_747_p2;
wire   [13:0] ap_phi_reg_pp0_iter1_sessionIt_V_new_4_i_reg_485;
reg   [0:0] ap_phi_mux_timeOver_flag_0_i_phi_fu_535_p30;
wire   [0:0] ap_phi_reg_pp0_iter1_timeOver_flag_0_i_reg_532;
reg   [0:0] ap_phi_mux_wordCount_V_flag_1_i_phi_fu_585_p30;
wire   [0:0] ap_phi_reg_pp0_iter1_wordCount_V_flag_1_i_reg_582;
reg   [7:0] ap_phi_mux_wordCount_V_new_1_i_phi_fu_635_p30;
wire   [7:0] ap_phi_reg_pp0_iter1_wordCount_V_new_1_i_reg_632;
wire   [7:0] add_ln885_2_fu_836_p2;
reg   [0:0] ap_phi_mux_timeOver_flag_1_i_phi_fu_685_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_timeOver_flag_1_i_reg_681;
reg   [0:0] ap_phi_reg_pp0_iter1_timeOver_flag_1_i_reg_681;
reg   [0:0] ap_phi_mux_timeOver_new_1_i_phi_fu_696_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_timeOver_new_1_i_reg_693;
reg   [0:0] ap_phi_reg_pp0_iter1_timeOver_new_1_i_reg_693;
wire   [31:0] ap_phi_reg_pp0_iter0_openTuple_ip_address_V_10_reg_703;
reg   [31:0] ap_phi_reg_pp0_iter1_openTuple_ip_address_V_10_reg_703;
reg   [31:0] ap_phi_reg_pp0_iter2_openTuple_ip_address_V_10_reg_703;
wire   [3:0] ipAddressIdx_V_load_load_fu_1115_p1;
wire   [3:0] select_ln365_fu_853_p3;
wire   [0:0] icmp_ln1068_1_fu_818_p2;
wire   [13:0] grp_fu_742_p2;
wire   [13:0] add_ln885_3_fu_1092_p2;
wire   [15:0] tmp_sessionID_V_1_fu_1044_p1;
wire   [3:0] select_ln215_fu_1134_p3;
wire   [511:0] p_Result_s_fu_1020_p5;
reg    ap_block_pp0_stage0_01001;
wire   [1023:0] zext_ln173_1_fu_1243_p1;
wire   [31:0] zext_ln173_2_fu_1256_p1;
wire   [31:0] zext_ln173_4_fu_1269_p1;
wire   [31:0] zext_ln173_fu_1282_p1;
wire   [31:0] zext_ln173_3_fu_1294_p1;
wire   [0:0] icmp_ln1068_fu_848_p2;
wire   [31:0] p_cast_fu_911_p3;
wire   [511:0] p_Result_7_fu_918_p5;
wire   [7:0] p_Result_i_fu_942_p4;
wire   [31:0] p_Result_9_fu_951_p5;
wire   [7:0] p_Result_4_i_fu_963_p4;
wire   [31:0] p_Result_10_fu_972_p5;
wire   [7:0] p_Result_6_i_fu_984_p4;
wire   [31:0] p_Result_11_fu_993_p5;
wire   [7:0] trunc_ln674_fu_1005_p1;
wire   [511:0] p_Result_8_fu_930_p5;
wire   [31:0] p_Result_12_fu_1008_p5;
wire   [7:0] tmp_success_V_fu_1076_p4;
wire   [3:0] add_ln885_5_fu_1119_p2;
wire   [15:0] zext_ln1064_fu_1125_p1;
wire   [0:0] icmp_ln1064_4_fu_1129_p2;
wire   [576:0] shl_ln_fu_1230_p3;
wire   [576:0] or_ln173_fu_1237_p2;
wire   [29:0] tmp_1_fu_1248_p4;
wire   [29:0] tmp_2_fu_1261_p4;
wire   [29:0] tmp_fu_1274_p4;
wire   [22:0] or_ln173_1_fu_1287_p3;
wire   [44:0] or_ln173_2_fu_1299_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [47:0] m_axis_open_connection_TDATA_int_regslice;
reg    m_axis_open_connection_TVALID_int_regslice;
wire    m_axis_open_connection_TREADY_int_regslice;
wire    regslice_both_m_axis_open_connection_U_vld_out;
reg    m_axis_close_connection_TVALID_int_regslice;
wire    m_axis_close_connection_TREADY_int_regslice;
wire    regslice_both_m_axis_close_connection_U_vld_out;
reg    ap_condition_695;
reg    ap_condition_710;
reg    ap_condition_714;
reg    ap_condition_717;
reg    ap_condition_720;
reg    ap_condition_723;
reg    ap_condition_726;
reg    ap_condition_729;
reg    ap_condition_732;
reg    ap_condition_735;
reg    ap_condition_738;
reg    ap_condition_443;
reg    ap_condition_526;
reg    ap_condition_584;
reg    ap_condition_1212;
reg    ap_condition_747;
reg    ap_condition_750;
reg    ap_condition_753;
reg    ap_condition_756;
reg    ap_condition_610;
reg    ap_condition_778;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 iperfFsmState = 4'd0;
#0 sessionIt_V = 14'd0;
#0 closeIt_V = 14'd0;
#0 numConnections_V = 14'd0;
#0 timeOver = 1'd0;
#0 stopSend = 1'd0;
#0 currentSessionID_V = 16'd0;
#0 wordCount_V = 8'd0;
#0 ipAddressIdx_V = 4'd0;
#0 header_header_V = 512'd72057594037927936;
#0 packetGapCounter_V = 8'd0;
end

iperf_client_regslice_both #(
    .DataWidth( 48 ))
regslice_both_m_axis_open_connection_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(m_axis_open_connection_TDATA_int_regslice),
    .vld_in(m_axis_open_connection_TVALID_int_regslice),
    .ack_in(m_axis_open_connection_TREADY_int_regslice),
    .data_out(m_axis_open_connection_TDATA),
    .vld_out(regslice_both_m_axis_open_connection_U_vld_out),
    .ack_out(m_axis_open_connection_TREADY),
    .apdone_blk(regslice_both_m_axis_open_connection_U_apdone_blk)
);

iperf_client_regslice_both #(
    .DataWidth( 16 ))
regslice_both_m_axis_close_connection_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(currentSessionID_V_load_reg_1425),
    .vld_in(m_axis_close_connection_TVALID_int_regslice),
    .ack_in(m_axis_close_connection_TREADY_int_regslice),
    .data_out(m_axis_close_connection_TDATA),
    .vld_out(regslice_both_m_axis_close_connection_U_vld_out),
    .ack_out(m_axis_close_connection_TREADY),
    .apdone_blk(regslice_both_m_axis_close_connection_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_695)) begin
        if ((tmp_5_i_nbreadreq_fu_336_p3 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_timeOver_flag_1_i_reg_681 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_timeOver_flag_1_i_reg_681 <= ap_phi_reg_pp0_iter0_timeOver_flag_1_i_reg_681;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_695)) begin
        if ((tmp_5_i_nbreadreq_fu_336_p3 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_timeOver_new_1_i_reg_693 <= stopSignalFifo_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_timeOver_new_1_i_reg_693 <= ap_phi_reg_pp0_iter0_timeOver_new_1_i_reg_693;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_443)) begin
        if ((1'b1 == ap_condition_738)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_10_reg_703 <= openTuple_ip_address_V_reg_1357;
        end else if ((1'b1 == ap_condition_735)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_10_reg_703 <= openTuple_ip_address_V_1_reg_1352;
        end else if ((1'b1 == ap_condition_732)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_10_reg_703 <= openTuple_ip_address_V_2_reg_1347;
        end else if ((1'b1 == ap_condition_729)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_10_reg_703 <= openTuple_ip_address_V_3_reg_1342;
        end else if ((1'b1 == ap_condition_726)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_10_reg_703 <= openTuple_ip_address_V_4_reg_1337;
        end else if ((1'b1 == ap_condition_723)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_10_reg_703 <= openTuple_ip_address_V_5_reg_1332;
        end else if ((1'b1 == ap_condition_720)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_10_reg_703 <= openTuple_ip_address_V_6_reg_1327;
        end else if ((1'b1 == ap_condition_717)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_10_reg_703 <= openTuple_ip_address_V_7_reg_1322;
        end else if ((1'b1 == ap_condition_714)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_10_reg_703 <= openTuple_ip_address_V_8_reg_1317;
        end else if ((1'b1 == ap_condition_710)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_10_reg_703 <= openTuple_ip_address_V_9_reg_1312;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_10_reg_703 <= ap_phi_reg_pp0_iter1_openTuple_ip_address_V_10_reg_703;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_443)) begin
        if ((1'b1 == ap_condition_584)) begin
            closeIt_V <= 14'd0;
        end else if ((1'b1 == ap_condition_526)) begin
            closeIt_V <= add_ln885_4_fu_805_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1212)) begin
        if (((icmp_ln1064_1_fu_1038_p2 == 1'd0) & (iperfFsmState == 4'd3))) begin
            currentSessionID_V <= tmp_sessionID_V_1_fu_1044_p1;
        end else if ((iperfFsmState == 4'd6)) begin
            currentSessionID_V <= tmp_sessionID_V_2_fu_879_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_443)) begin
        if ((1'b1 == ap_condition_584)) begin
            ipAddressIdx_V <= 4'd0;
        end else if (((icmp_ln1072_fu_1110_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd1))) begin
            ipAddressIdx_V <= select_ln215_fu_1134_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_443)) begin
        if ((1'b1 == ap_condition_778)) begin
            iperfFsmState <= 4'd1;
        end else if (((icmp_ln1064_fu_1165_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd9))) begin
            iperfFsmState <= 4'd8;
        end else if (((grp_fu_755_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd1))) begin
            iperfFsmState <= 4'd2;
        end else if ((1'b1 == ap_condition_610)) begin
            iperfFsmState <= 4'd3;
        end else if (((icmp_ln1064_1_fu_1038_p2 == 1'd1) & (iperfFsmState == 4'd3))) begin
            iperfFsmState <= 4'd6;
        end else if ((1'b1 == ap_condition_756)) begin
            iperfFsmState <= 4'd4;
        end else if ((iperfFsmState_load_load_fu_764_p1 == 4'd4)) begin
            iperfFsmState <= 4'd3;
        end else if ((1'b1 == ap_condition_753)) begin
            iperfFsmState <= 4'd5;
        end else if ((iperfFsmState_load_load_fu_764_p1 == 4'd5)) begin
            iperfFsmState <= 4'd7;
        end else if (((currWord_last_V_fu_843_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd7))) begin
            iperfFsmState <= select_ln365_fu_853_p3;
        end else if ((1'b1 == ap_condition_750)) begin
            iperfFsmState <= 4'd0;
        end else if ((1'b1 == ap_condition_747)) begin
            iperfFsmState <= 4'd6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((iperfFsmState_load_load_fu_764_p1 == 4'd0) | ((iperfFsmState_load_load_fu_764_p1 == 4'd10) | ((iperfFsmState_load_load_fu_764_p1 == 4'd11) | ((iperfFsmState_load_load_fu_764_p1 == 4'd12) | ((iperfFsmState_load_load_fu_764_p1 == 4'd13) | ((iperfFsmState_load_load_fu_764_p1 == 4'd14) | (iperfFsmState_load_load_fu_764_p1 == 4'd15))))))))) begin
        numConnections_V <= 14'd0;
    end else if (((icmp_ln231_fu_1086_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_i_nbreadreq_fu_364_p3 == 1'd1) & (iperfFsmState == 4'd2))) begin
        numConnections_V <= add_ln885_3_fu_1092_p2;
    end else if ((((grp_fu_732_p4 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1064_1_fu_1038_p2 == 1'd0) & (grp_nbreadreq_fu_350_p3 == 1'd1) & (iperfFsmState == 4'd3)) | ((grp_fu_732_p4 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (grp_nbreadreq_fu_350_p3 == 1'd1) & (iperfFsmState == 4'd6)))) begin
        numConnections_V <= grp_fu_742_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_443)) begin
        if ((1'b1 == ap_condition_584)) begin
            stopSend <= 1'd0;
        end else if (((timeOver_load_load_fu_783_p1 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd5))) begin
            stopSend <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_openTuple_ip_address_V_10_reg_703 <= ap_phi_reg_pp0_iter0_openTuple_ip_address_V_10_reg_703;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (iperfFsmState_load_load_fu_764_p1 == 4'd7))) begin
        currWord_last_V_reg_1439 <= currWord_last_V_fu_843_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        currentSessionID_V_load_reg_1425 <= currentSessionID_V;
        en_reg_1395 <= dualModeEn_dout;
        iperfFsmState_load_reg_1413 <= iperfFsmState;
        openTuple_ip_address_V_1_reg_1352 <= regIpAddress1_dout;
        openTuple_ip_address_V_2_reg_1347 <= regIpAddress2_dout;
        openTuple_ip_address_V_3_reg_1342 <= regIpAddress3_dout;
        openTuple_ip_address_V_4_reg_1337 <= regIpAddress4_dout;
        openTuple_ip_address_V_5_reg_1332 <= regIpAddress5_dout;
        openTuple_ip_address_V_6_reg_1327 <= regIpAddress6_dout;
        openTuple_ip_address_V_7_reg_1322 <= regIpAddress7_dout;
        openTuple_ip_address_V_8_reg_1317 <= regIpAddress8_dout;
        openTuple_ip_address_V_9_reg_1312 <= regIpAddress9_dout;
        openTuple_ip_address_V_reg_1357 <= regIpAddress0_dout;
        packetGap_read_reg_1375 <= packetGap_dout;
        pkgWordCount_read_reg_1381 <= pkgWordCount_dout;
        pkgWordCount_read_reg_1381_pp0_iter1_reg <= pkgWordCount_read_reg_1381;
        runExperiment_read_reg_1400 <= runExperiment_dout;
        seconds_V_reg_1367 <= timeInSeconds_dout;
        stopSend_load_reg_1421 <= stopSend;
        timeOver_load_reg_1417 <= timeOver;
        tmp_5_i_reg_1404 <= tmp_5_i_nbreadreq_fu_336_p3;
        useConn_read_reg_1389 <= useConn_dout;
        useIpAddr_read_reg_1362 <= useIpAddr_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (iperfFsmState == 4'd3))) begin
        header_header_V <= p_Result_s_fu_1020_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((stopSend_load_load_fu_787_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (iperfFsmState_load_load_fu_764_p1 == 4'd8))) begin
        icmp_ln1064_2_reg_1432 <= icmp_ln1064_2_fu_799_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln1064_2_reg_1432_pp0_iter2_reg <= icmp_ln1064_2_reg_1432;
        icmp_ln1072_reg_1476_pp0_iter2_reg <= icmp_ln1072_reg_1476;
        iperfFsmState_load_reg_1413_pp0_iter2_reg <= iperfFsmState_load_reg_1413;
        stopSend_load_reg_1421_pp0_iter2_reg <= stopSend_load_reg_1421;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_i_nbreadreq_fu_364_p3 == 1'd1) & (iperfFsmState == 4'd2))) begin
        icmp_ln1064_5_reg_1472 <= grp_fu_755_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (iperfFsmState_load_load_fu_764_p1 == 4'd1))) begin
        icmp_ln1072_reg_1476 <= icmp_ln1072_fu_1110_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_i_nbreadreq_fu_364_p3 == 1'd1) & (iperfFsmState == 4'd2))) begin
        icmp_ln231_reg_1468 <= icmp_ln231_fu_1086_p2;
        tmp_sessionID_V_reg_1463 <= tmp_sessionID_V_fu_1072_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (iperfFsmState_load_load_fu_764_p1 == 4'd9))) begin
        packetGapCounter_V <= ap_phi_mux_packetGapCounter_V_new_0_i_phi_fu_428_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_sessionIt_V_flag_4_i_phi_fu_438_p30 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sessionIt_V <= ap_phi_mux_sessionIt_V_new_4_i_phi_fu_488_p30;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_timeOver_flag_1_i_phi_fu_685_p4 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        timeOver <= ap_phi_mux_timeOver_new_1_i_phi_fu_696_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (iperfFsmState == 4'd6))) begin
        tmp_1_i_reg_1444 <= grp_nbreadreq_fu_350_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (grp_nbreadreq_fu_350_p3 == 1'd1) & (iperfFsmState == 4'd6))) begin
        tmp_error_V_2_reg_760 <= {{txStatusBuffer_dout[17:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (iperfFsmState == 4'd2))) begin
        tmp_i_reg_1459 <= tmp_i_nbreadreq_fu_364_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (grp_nbreadreq_fu_350_p3 == 1'd1) & (iperfFsmState == 4'd6))) begin
        tmp_sessionID_V_2_reg_1448 <= tmp_sessionID_V_2_fu_879_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_wordCount_V_flag_1_i_phi_fu_585_p30 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        wordCount_V <= ap_phi_mux_wordCount_V_new_1_i_phi_fu_635_p30;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if ((iperfFsmState_load_load_fu_764_p1 == 4'd8)) begin
        if ((stopSend_load_load_fu_787_p1 == 1'd0)) begin
            ap_phi_mux_closeIt_V_loc_0_i_phi_fu_419_p4 = closeIt_V;
        end else if (((icmp_ln1064_2_fu_799_p2 == 1'd0) & (stopSend_load_load_fu_787_p1 == 1'd1))) begin
            ap_phi_mux_closeIt_V_loc_0_i_phi_fu_419_p4 = add_ln885_4_fu_805_p2;
        end else begin
            ap_phi_mux_closeIt_V_loc_0_i_phi_fu_419_p4 = ap_phi_reg_pp0_iter1_closeIt_V_loc_0_i_reg_416;
        end
    end else begin
        ap_phi_mux_closeIt_V_loc_0_i_phi_fu_419_p4 = ap_phi_reg_pp0_iter1_closeIt_V_loc_0_i_reg_416;
    end
end

always @ (*) begin
    if ((iperfFsmState_load_load_fu_764_p1 == 4'd9)) begin
        if ((icmp_ln1064_fu_1165_p2 == 1'd0)) begin
            ap_phi_mux_packetGapCounter_V_new_0_i_phi_fu_428_p4 = add_ln885_fu_1158_p2;
        end else if ((icmp_ln1064_fu_1165_p2 == 1'd1)) begin
            ap_phi_mux_packetGapCounter_V_new_0_i_phi_fu_428_p4 = 8'd0;
        end else begin
            ap_phi_mux_packetGapCounter_V_new_0_i_phi_fu_428_p4 = ap_phi_reg_pp0_iter1_packetGapCounter_V_new_0_i_reg_425;
        end
    end else begin
        ap_phi_mux_packetGapCounter_V_new_0_i_phi_fu_428_p4 = ap_phi_reg_pp0_iter1_packetGapCounter_V_new_0_i_reg_425;
    end
end

always @ (*) begin
    if (((iperfFsmState_load_load_fu_764_p1 == 4'd9) | (iperfFsmState_load_load_fu_764_p1 == 4'd5) | (iperfFsmState_load_load_fu_764_p1 == 4'd8) | (iperfFsmState == 4'd6) | ((currWord_last_V_fu_843_p2 == 1'd0) & (iperfFsmState_load_load_fu_764_p1 == 4'd7)) | ((currWord_last_V_fu_843_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd7)) | ((tmp_i_nbreadreq_fu_364_p3 == 1'd0) & (iperfFsmState == 4'd2)) | ((icmp_ln1064_1_fu_1038_p2 == 1'd0) & (iperfFsmState == 4'd3)))) begin
        ap_phi_mux_sessionIt_V_flag_4_i_phi_fu_438_p30 = 1'd0;
    end else if (((iperfFsmState_load_load_fu_764_p1 == 4'd10) | (iperfFsmState_load_load_fu_764_p1 == 4'd11) | (iperfFsmState_load_load_fu_764_p1 == 4'd12) | (iperfFsmState_load_load_fu_764_p1 == 4'd13) | (iperfFsmState_load_load_fu_764_p1 == 4'd14) | (iperfFsmState_load_load_fu_764_p1 == 4'd15) | (iperfFsmState_load_load_fu_764_p1 == 4'd0) | (iperfFsmState_load_load_fu_764_p1 == 4'd4) | ((grp_fu_755_p2 == 1'd0) & (iperfFsmState_load_load_fu_764_p1 == 4'd1)) | ((grp_fu_755_p2 == 1'd0) & (tmp_i_nbreadreq_fu_364_p3 == 1'd1) & (iperfFsmState == 4'd2)) | ((grp_fu_755_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd1)) | ((grp_fu_755_p2 == 1'd1) & (tmp_i_nbreadreq_fu_364_p3 == 1'd1) & (iperfFsmState == 4'd2)) | ((icmp_ln1064_1_fu_1038_p2 == 1'd1) & (iperfFsmState == 4'd3)))) begin
        ap_phi_mux_sessionIt_V_flag_4_i_phi_fu_438_p30 = 1'd1;
    end else begin
        ap_phi_mux_sessionIt_V_flag_4_i_phi_fu_438_p30 = ap_phi_reg_pp0_iter1_sessionIt_V_flag_4_i_reg_435;
    end
end

always @ (*) begin
    if (((iperfFsmState_load_load_fu_764_p1 == 4'd10) | (iperfFsmState_load_load_fu_764_p1 == 4'd11) | (iperfFsmState_load_load_fu_764_p1 == 4'd12) | (iperfFsmState_load_load_fu_764_p1 == 4'd13) | (iperfFsmState_load_load_fu_764_p1 == 4'd14) | (iperfFsmState_load_load_fu_764_p1 == 4'd15) | (iperfFsmState_load_load_fu_764_p1 == 4'd0) | ((grp_fu_755_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd1)) | ((grp_fu_755_p2 == 1'd1) & (tmp_i_nbreadreq_fu_364_p3 == 1'd1) & (iperfFsmState == 4'd2)) | ((icmp_ln1064_1_fu_1038_p2 == 1'd1) & (iperfFsmState == 4'd3)) | ((icmp_ln1064_1_fu_1038_p2 == 1'd0) & (iperfFsmState == 4'd3)))) begin
        ap_phi_mux_sessionIt_V_new_4_i_phi_fu_488_p30 = 14'd0;
    end else if (((iperfFsmState_load_load_fu_764_p1 == 4'd4) | ((grp_fu_755_p2 == 1'd0) & (iperfFsmState_load_load_fu_764_p1 == 4'd1)) | ((grp_fu_755_p2 == 1'd0) & (tmp_i_nbreadreq_fu_364_p3 == 1'd1) & (iperfFsmState == 4'd2)))) begin
        ap_phi_mux_sessionIt_V_new_4_i_phi_fu_488_p30 = grp_fu_747_p2;
    end else begin
        ap_phi_mux_sessionIt_V_new_4_i_phi_fu_488_p30 = ap_phi_reg_pp0_iter1_sessionIt_V_new_4_i_reg_485;
    end
end

always @ (*) begin
    if (((iperfFsmState_load_load_fu_764_p1 == 4'd0) | ((iperfFsmState_load_load_fu_764_p1 == 4'd10) | ((iperfFsmState_load_load_fu_764_p1 == 4'd11) | ((iperfFsmState_load_load_fu_764_p1 == 4'd12) | ((iperfFsmState_load_load_fu_764_p1 == 4'd13) | ((iperfFsmState_load_load_fu_764_p1 == 4'd14) | (iperfFsmState_load_load_fu_764_p1 == 4'd15)))))))) begin
        ap_phi_mux_timeOver_flag_0_i_phi_fu_535_p30 = 1'd1;
    end else if (((iperfFsmState_load_load_fu_764_p1 == 4'd9) | (iperfFsmState_load_load_fu_764_p1 == 4'd4) | (iperfFsmState_load_load_fu_764_p1 == 4'd5) | (iperfFsmState_load_load_fu_764_p1 == 4'd8) | (iperfFsmState == 4'd6) | ((grp_fu_755_p2 == 1'd0) & (iperfFsmState_load_load_fu_764_p1 == 4'd1)) | ((grp_fu_755_p2 == 1'd0) & (tmp_i_nbreadreq_fu_364_p3 == 1'd1) & (iperfFsmState == 4'd2)) | ((grp_fu_755_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd1)) | ((grp_fu_755_p2 == 1'd1) & (tmp_i_nbreadreq_fu_364_p3 == 1'd1) & (iperfFsmState == 4'd2)) | ((currWord_last_V_fu_843_p2 == 1'd0) & (iperfFsmState_load_load_fu_764_p1 == 4'd7)) | ((currWord_last_V_fu_843_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd7)) | ((icmp_ln1064_1_fu_1038_p2 == 1'd1) & (iperfFsmState == 4'd3)) | ((tmp_i_nbreadreq_fu_364_p3 == 1'd0) & (iperfFsmState == 4'd2)) | ((icmp_ln1064_1_fu_1038_p2 == 1'd0) & (iperfFsmState == 4'd3)))) begin
        ap_phi_mux_timeOver_flag_0_i_phi_fu_535_p30 = 1'd0;
    end else begin
        ap_phi_mux_timeOver_flag_0_i_phi_fu_535_p30 = ap_phi_reg_pp0_iter1_timeOver_flag_0_i_reg_532;
    end
end

always @ (*) begin
    if ((tmp_5_i_reg_1404 == 1'd0)) begin
        ap_phi_mux_timeOver_flag_1_i_phi_fu_685_p4 = ap_phi_mux_timeOver_flag_0_i_phi_fu_535_p30;
    end else begin
        ap_phi_mux_timeOver_flag_1_i_phi_fu_685_p4 = ap_phi_reg_pp0_iter1_timeOver_flag_1_i_reg_681;
    end
end

always @ (*) begin
    if ((tmp_5_i_reg_1404 == 1'd0)) begin
        ap_phi_mux_timeOver_new_1_i_phi_fu_696_p4 = 1'd0;
    end else begin
        ap_phi_mux_timeOver_new_1_i_phi_fu_696_p4 = ap_phi_reg_pp0_iter1_timeOver_new_1_i_reg_693;
    end
end

always @ (*) begin
    if (((iperfFsmState_load_load_fu_764_p1 == 4'd5) | ((currWord_last_V_fu_843_p2 == 1'd0) & (iperfFsmState_load_load_fu_764_p1 == 4'd7)) | ((currWord_last_V_fu_843_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd7)))) begin
        ap_phi_mux_wordCount_V_flag_1_i_phi_fu_585_p30 = 1'd1;
    end else if (((iperfFsmState_load_load_fu_764_p1 == 4'd10) | (iperfFsmState_load_load_fu_764_p1 == 4'd11) | (iperfFsmState_load_load_fu_764_p1 == 4'd12) | (iperfFsmState_load_load_fu_764_p1 == 4'd13) | (iperfFsmState_load_load_fu_764_p1 == 4'd14) | (iperfFsmState_load_load_fu_764_p1 == 4'd15) | (iperfFsmState_load_load_fu_764_p1 == 4'd9) | (iperfFsmState_load_load_fu_764_p1 == 4'd0) | (iperfFsmState_load_load_fu_764_p1 == 4'd4) | (iperfFsmState_load_load_fu_764_p1 == 4'd8) | (iperfFsmState == 4'd6) | ((grp_fu_755_p2 == 1'd0) & (iperfFsmState_load_load_fu_764_p1 == 4'd1)) | ((grp_fu_755_p2 == 1'd0) & (tmp_i_nbreadreq_fu_364_p3 == 1'd1) & (iperfFsmState == 4'd2)) | ((grp_fu_755_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd1)) | ((grp_fu_755_p2 == 1'd1) & (tmp_i_nbreadreq_fu_364_p3 == 1'd1) & (iperfFsmState == 4'd2)) | ((icmp_ln1064_1_fu_1038_p2 == 1'd1) & (iperfFsmState == 4'd3)) | ((tmp_i_nbreadreq_fu_364_p3 == 1'd0) & (iperfFsmState == 4'd2)) | ((icmp_ln1064_1_fu_1038_p2 == 1'd0) & (iperfFsmState == 4'd3)))) begin
        ap_phi_mux_wordCount_V_flag_1_i_phi_fu_585_p30 = 1'd0;
    end else begin
        ap_phi_mux_wordCount_V_flag_1_i_phi_fu_585_p30 = ap_phi_reg_pp0_iter1_wordCount_V_flag_1_i_reg_582;
    end
end

always @ (*) begin
    if ((iperfFsmState_load_load_fu_764_p1 == 4'd5)) begin
        ap_phi_mux_wordCount_V_new_1_i_phi_fu_635_p30 = 8'd1;
    end else if (((currWord_last_V_fu_843_p2 == 1'd0) & (iperfFsmState_load_load_fu_764_p1 == 4'd7))) begin
        ap_phi_mux_wordCount_V_new_1_i_phi_fu_635_p30 = add_ln885_2_fu_836_p2;
    end else if (((currWord_last_V_fu_843_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd7))) begin
        ap_phi_mux_wordCount_V_new_1_i_phi_fu_635_p30 = 8'd0;
    end else begin
        ap_phi_mux_wordCount_V_new_1_i_phi_fu_635_p30 = ap_phi_reg_pp0_iter1_wordCount_V_new_1_i_reg_632;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        dualModeEn_blk_n = dualModeEn_empty_n;
    end else begin
        dualModeEn_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dualModeEn_read = 1'b1;
    end else begin
        dualModeEn_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op255_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op228_write_state3 == 1'b1)))) begin
        m_axis_close_connection_TDATA_blk_n = m_axis_close_connection_TREADY_int_regslice;
    end else begin
        m_axis_close_connection_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op228_write_state3 == 1'b1))) begin
        m_axis_close_connection_TVALID_int_regslice = 1'b1;
    end else begin
        m_axis_close_connection_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op256_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op254_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        m_axis_open_connection_TDATA_blk_n = m_axis_open_connection_TREADY_int_regslice;
    end else begin
        m_axis_open_connection_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op254_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        m_axis_open_connection_TVALID_int_regslice = 1'b1;
    end else begin
        m_axis_open_connection_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op158_read_state2 == 1'b1))) begin
        openConStatusBuffer_blk_n = openConStatusBuffer_empty_n;
    end else begin
        openConStatusBuffer_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op158_read_state2 == 1'b1))) begin
        openConStatusBuffer_read = 1'b1;
    end else begin
        openConStatusBuffer_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        packetGap_blk_n = packetGap_empty_n;
    end else begin
        packetGap_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        packetGap_read = 1'b1;
    end else begin
        packetGap_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        pkgWordCount_blk_n = pkgWordCount_empty_n;
    end else begin
        pkgWordCount_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pkgWordCount_read = 1'b1;
    end else begin
        pkgWordCount_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress0_blk_n = regIpAddress0_empty_n;
    end else begin
        regIpAddress0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress0_read = 1'b1;
    end else begin
        regIpAddress0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress1_blk_n = regIpAddress1_empty_n;
    end else begin
        regIpAddress1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress1_read = 1'b1;
    end else begin
        regIpAddress1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress2_blk_n = regIpAddress2_empty_n;
    end else begin
        regIpAddress2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress2_read = 1'b1;
    end else begin
        regIpAddress2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress3_blk_n = regIpAddress3_empty_n;
    end else begin
        regIpAddress3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress3_read = 1'b1;
    end else begin
        regIpAddress3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress4_blk_n = regIpAddress4_empty_n;
    end else begin
        regIpAddress4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress4_read = 1'b1;
    end else begin
        regIpAddress4_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress5_blk_n = regIpAddress5_empty_n;
    end else begin
        regIpAddress5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress5_read = 1'b1;
    end else begin
        regIpAddress5_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress6_blk_n = regIpAddress6_empty_n;
    end else begin
        regIpAddress6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress6_read = 1'b1;
    end else begin
        regIpAddress6_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress7_blk_n = regIpAddress7_empty_n;
    end else begin
        regIpAddress7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress7_read = 1'b1;
    end else begin
        regIpAddress7_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress8_blk_n = regIpAddress8_empty_n;
    end else begin
        regIpAddress8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress8_read = 1'b1;
    end else begin
        regIpAddress8_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress9_blk_n = regIpAddress9_empty_n;
    end else begin
        regIpAddress9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress9_read = 1'b1;
    end else begin
        regIpAddress9_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        runExperiment_blk_n = runExperiment_empty_n;
    end else begin
        runExperiment_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        runExperiment_read = 1'b1;
    end else begin
        runExperiment_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op250_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        startSignalFifo_blk_n = startSignalFifo_full_n;
    end else begin
        startSignalFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op250_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        startSignalFifo_write = 1'b1;
    end else begin
        startSignalFifo_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0) & (tmp_5_i_nbreadreq_fu_336_p3 == 1'd1))) begin
        stopSignalFifo_blk_n = stopSignalFifo_empty_n;
    end else begin
        stopSignalFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_5_i_nbreadreq_fu_336_p3 == 1'd1))) begin
        stopSignalFifo_read = 1'b1;
    end else begin
        stopSignalFifo_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        timeInSeconds_blk_n = timeInSeconds_empty_n;
    end else begin
        timeInSeconds_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        timeInSeconds_read = 1'b1;
    end else begin
        timeInSeconds_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (iperfFsmState_load_reg_1413 == 4'd4)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (iperfFsmState_load_reg_1413 == 4'd5)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (iperfFsmState_load_reg_1413 == 4'd7)))) begin
        txDataBuffer_blk_n = txDataBuffer_full_n;
    end else begin
        txDataBuffer_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((iperfFsmState_load_reg_1413 == 4'd4)) begin
            txDataBuffer_din = 1024'd494660802946209068107597234109351782970688673204217833700646746365202056835340172896911038092412543002393468553865375251012698210427016369081338427391839765886779895291314176;
        end else if ((iperfFsmState_load_reg_1413 == 4'd5)) begin
            txDataBuffer_din = 1024'd247330401473104534049986387036794404265444427179859539717357571501504676384200448144401845323817807855737010027930728666130808966645273754506324562903351815651596089160773936;
        end else if ((iperfFsmState_load_reg_1413 == 4'd7)) begin
            txDataBuffer_din = zext_ln173_1_fu_1243_p1;
        end else begin
            txDataBuffer_din = 'bx;
        end
    end else begin
        txDataBuffer_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (iperfFsmState_load_reg_1413 == 4'd4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (iperfFsmState_load_reg_1413 == 4'd5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (iperfFsmState_load_reg_1413 == 4'd7)))) begin
        txDataBuffer_write = 1'b1;
    end else begin
        txDataBuffer_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op248_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (iperfFsmState_load_reg_1413 == 4'd4)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op240_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op235_write_state3 == 1'b1)))) begin
        txMetaDataBuffer_blk_n = txMetaDataBuffer_full_n;
    end else begin
        txMetaDataBuffer_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op248_write_state3 == 1'b1)) begin
            txMetaDataBuffer_din = zext_ln173_3_fu_1294_p1;
        end else if ((iperfFsmState_load_reg_1413 == 4'd4)) begin
            txMetaDataBuffer_din = zext_ln173_fu_1282_p1;
        end else if ((ap_predicate_op240_write_state3 == 1'b1)) begin
            txMetaDataBuffer_din = zext_ln173_4_fu_1269_p1;
        end else if ((ap_predicate_op235_write_state3 == 1'b1)) begin
            txMetaDataBuffer_din = zext_ln173_2_fu_1256_p1;
        end else begin
            txMetaDataBuffer_din = 'bx;
        end
    end else begin
        txMetaDataBuffer_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op248_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (iperfFsmState_load_reg_1413 == 4'd4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op240_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op235_write_state3 == 1'b1)))) begin
        txMetaDataBuffer_write = 1'b1;
    end else begin
        txMetaDataBuffer_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op141_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op107_read_state2 == 1'b1)))) begin
        txStatusBuffer_blk_n = txStatusBuffer_empty_n;
    end else begin
        txStatusBuffer_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op141_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op107_read_state2 == 1'b1)))) begin
        txStatusBuffer_read = 1'b1;
    end else begin
        txStatusBuffer_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        useConn_blk_n = useConn_empty_n;
    end else begin
        useConn_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        useConn_read = 1'b1;
    end else begin
        useConn_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        useIpAddr_blk_n = useIpAddr_empty_n;
    end else begin
        useIpAddr_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        useIpAddr_read = 1'b1;
    end else begin
        useIpAddr_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln885_2_fu_836_p2 = (wordCount_V + 8'd1);

assign add_ln885_3_fu_1092_p2 = (numConnections_V + 14'd1);

assign add_ln885_4_fu_805_p2 = (closeIt_V + 14'd1);

assign add_ln885_5_fu_1119_p2 = (ipAddressIdx_V + 4'd1);

assign add_ln885_fu_1158_p2 = (packetGapCounter_V + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_m_axis_close_connection_U_apdone_blk == 1'b1) | (regslice_both_m_axis_open_connection_U_apdone_blk == 1'b1) | ((ap_predicate_op256_write_state4 == 1'b1) & (m_axis_open_connection_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op255_write_state4 == 1'b1) & (m_axis_close_connection_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((ap_predicate_op254_write_state3 == 1'b1) & (m_axis_open_connection_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op250_write_state3 == 1'b1) & (startSignalFifo_full_n == 1'b0)) | ((ap_predicate_op248_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((ap_predicate_op240_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((ap_predicate_op235_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((txMetaDataBuffer_full_n == 1'b0) & (iperfFsmState_load_reg_1413 == 4'd4)) | ((txDataBuffer_full_n == 1'b0) & (iperfFsmState_load_reg_1413 == 4'd4)) | ((txDataBuffer_full_n == 1'b0) & (iperfFsmState_load_reg_1413 == 4'd5)) | ((txDataBuffer_full_n == 1'b0) & (iperfFsmState_load_reg_1413 == 4'd7)) | ((ap_predicate_op228_write_state3 == 1'b1) & (m_axis_close_connection_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op158_read_state2 == 1'b1) & (openConStatusBuffer_empty_n == 1'b0)) | ((ap_predicate_op141_read_state2 == 1'b1) & (txStatusBuffer_empty_n == 1'b0)) | ((ap_predicate_op107_read_state2 == 1'b1) & (txStatusBuffer_empty_n == 1'b0)))) | ((ap_start == 1'b1) & ((useIpAddr_empty_n == 1'b0) | (regIpAddress0_empty_n == 1'b0) | (regIpAddress1_empty_n == 1'b0) | (regIpAddress2_empty_n == 1'b0) | (regIpAddress3_empty_n == 1'b0) | (regIpAddress4_empty_n == 1'b0) | (regIpAddress5_empty_n == 1'b0) | (regIpAddress6_empty_n == 1'b0) | (regIpAddress7_empty_n == 1'b0) | (regIpAddress8_empty_n == 1'b0) | (regIpAddress9_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (runExperiment_empty_n == 1'b0) | (dualModeEn_empty_n == 1'b0) | (useConn_empty_n == 1'b0) | (pkgWordCount_empty_n == 1'b0) | (packetGap_empty_n == 1'b0) | (timeInSeconds_empty_n == 1'b0) | ((tmp_5_i_nbreadreq_fu_336_p3 == 1'd1) & (stopSignalFifo_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_m_axis_close_connection_U_apdone_blk == 1'b1) | (regslice_both_m_axis_open_connection_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op256_write_state4 == 1'b1) & (m_axis_open_connection_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op255_write_state4 == 1'b1) & (m_axis_close_connection_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op254_write_state3 == 1'b1) & (m_axis_open_connection_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op250_write_state3 == 1'b1) & (startSignalFifo_full_n == 1'b0)) | ((ap_predicate_op248_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((ap_predicate_op240_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((ap_predicate_op235_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((txMetaDataBuffer_full_n == 1'b0) & (iperfFsmState_load_reg_1413 == 4'd4)) | ((txDataBuffer_full_n == 1'b0) & (iperfFsmState_load_reg_1413 == 4'd4)) | ((txDataBuffer_full_n == 1'b0) & (iperfFsmState_load_reg_1413 == 4'd5)) | ((txDataBuffer_full_n == 1'b0) & (iperfFsmState_load_reg_1413 == 4'd7)) | ((ap_predicate_op228_write_state3 == 1'b1) & (m_axis_close_connection_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op158_read_state2 == 1'b1) & (openConStatusBuffer_empty_n == 1'b0)) | ((ap_predicate_op141_read_state2 == 1'b1) & (txStatusBuffer_empty_n == 1'b0)) | ((ap_predicate_op107_read_state2 == 1'b1) & (txStatusBuffer_empty_n == 1'b0)))) | ((ap_start == 1'b1) & ((useIpAddr_empty_n == 1'b0) | (regIpAddress0_empty_n == 1'b0) | (regIpAddress1_empty_n == 1'b0) | (regIpAddress2_empty_n == 1'b0) | (regIpAddress3_empty_n == 1'b0) | (regIpAddress4_empty_n == 1'b0) | (regIpAddress5_empty_n == 1'b0) | (regIpAddress6_empty_n == 1'b0) | (regIpAddress7_empty_n == 1'b0) | (regIpAddress8_empty_n == 1'b0) | (regIpAddress9_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (runExperiment_empty_n == 1'b0) | (dualModeEn_empty_n == 1'b0) | (useConn_empty_n == 1'b0) | (pkgWordCount_empty_n == 1'b0) | (packetGap_empty_n == 1'b0) | (timeInSeconds_empty_n == 1'b0) | ((tmp_5_i_nbreadreq_fu_336_p3 == 1'd1) & (stopSignalFifo_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_m_axis_close_connection_U_apdone_blk == 1'b1) | (regslice_both_m_axis_open_connection_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op256_write_state4 == 1'b1) & (m_axis_open_connection_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op255_write_state4 == 1'b1) & (m_axis_close_connection_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op254_write_state3 == 1'b1) & (m_axis_open_connection_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op250_write_state3 == 1'b1) & (startSignalFifo_full_n == 1'b0)) | ((ap_predicate_op248_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((ap_predicate_op240_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((ap_predicate_op235_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((txMetaDataBuffer_full_n == 1'b0) & (iperfFsmState_load_reg_1413 == 4'd4)) | ((txDataBuffer_full_n == 1'b0) & (iperfFsmState_load_reg_1413 == 4'd4)) | ((txDataBuffer_full_n == 1'b0) & (iperfFsmState_load_reg_1413 == 4'd5)) | ((txDataBuffer_full_n == 1'b0) & (iperfFsmState_load_reg_1413 == 4'd7)) | ((ap_predicate_op228_write_state3 == 1'b1) & (m_axis_close_connection_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op158_read_state2 == 1'b1) & (openConStatusBuffer_empty_n == 1'b0)) | ((ap_predicate_op141_read_state2 == 1'b1) & (txStatusBuffer_empty_n == 1'b0)) | ((ap_predicate_op107_read_state2 == 1'b1) & (txStatusBuffer_empty_n == 1'b0)))) | ((ap_start == 1'b1) & ((useIpAddr_empty_n == 1'b0) | (regIpAddress0_empty_n == 1'b0) | (regIpAddress1_empty_n == 1'b0) | (regIpAddress2_empty_n == 1'b0) | (regIpAddress3_empty_n == 1'b0) | (regIpAddress4_empty_n == 1'b0) | (regIpAddress5_empty_n == 1'b0) | (regIpAddress6_empty_n == 1'b0) | (regIpAddress7_empty_n == 1'b0) | (regIpAddress8_empty_n == 1'b0) | (regIpAddress9_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (runExperiment_empty_n == 1'b0) | (dualModeEn_empty_n == 1'b0) | (useConn_empty_n == 1'b0) | (pkgWordCount_empty_n == 1'b0) | (packetGap_empty_n == 1'b0) | (timeInSeconds_empty_n == 1'b0) | ((tmp_5_i_nbreadreq_fu_336_p3 == 1'd1) & (stopSignalFifo_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((useIpAddr_empty_n == 1'b0) | (regIpAddress0_empty_n == 1'b0) | (regIpAddress1_empty_n == 1'b0) | (regIpAddress2_empty_n == 1'b0) | (regIpAddress3_empty_n == 1'b0) | (regIpAddress4_empty_n == 1'b0) | (regIpAddress5_empty_n == 1'b0) | (regIpAddress6_empty_n == 1'b0) | (regIpAddress7_empty_n == 1'b0) | (regIpAddress8_empty_n == 1'b0) | (regIpAddress9_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (runExperiment_empty_n == 1'b0) | (dualModeEn_empty_n == 1'b0) | (useConn_empty_n == 1'b0) | (pkgWordCount_empty_n == 1'b0) | (packetGap_empty_n == 1'b0) | (timeInSeconds_empty_n == 1'b0) | ((tmp_5_i_nbreadreq_fu_336_p3 == 1'd1) & (stopSignalFifo_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op158_read_state2 == 1'b1) & (openConStatusBuffer_empty_n == 1'b0)) | ((ap_predicate_op141_read_state2 == 1'b1) & (txStatusBuffer_empty_n == 1'b0)) | ((ap_predicate_op107_read_state2 == 1'b1) & (txStatusBuffer_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3_io = (((ap_predicate_op254_write_state3 == 1'b1) & (m_axis_open_connection_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op228_write_state3 == 1'b1) & (m_axis_close_connection_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((ap_predicate_op254_write_state3 == 1'b1) & (m_axis_open_connection_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op250_write_state3 == 1'b1) & (startSignalFifo_full_n == 1'b0)) | ((ap_predicate_op248_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((ap_predicate_op240_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((ap_predicate_op235_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((txMetaDataBuffer_full_n == 1'b0) & (iperfFsmState_load_reg_1413 == 4'd4)) | ((txDataBuffer_full_n == 1'b0) & (iperfFsmState_load_reg_1413 == 4'd4)) | ((txDataBuffer_full_n == 1'b0) & (iperfFsmState_load_reg_1413 == 4'd5)) | ((txDataBuffer_full_n == 1'b0) & (iperfFsmState_load_reg_1413 == 4'd7)) | ((ap_predicate_op228_write_state3 == 1'b1) & (m_axis_close_connection_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state4_io = (((ap_predicate_op256_write_state4 == 1'b1) & (m_axis_open_connection_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op255_write_state4 == 1'b1) & (m_axis_close_connection_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((regslice_both_m_axis_close_connection_U_apdone_blk == 1'b1) | (regslice_both_m_axis_open_connection_U_apdone_blk == 1'b1) | ((ap_predicate_op256_write_state4 == 1'b1) & (m_axis_open_connection_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op255_write_state4 == 1'b1) & (m_axis_close_connection_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_condition_1212 = ((grp_fu_732_p4 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (grp_nbreadreq_fu_350_p3 == 1'd1));
end

always @ (*) begin
    ap_condition_443 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_526 = ((icmp_ln1064_2_fu_799_p2 == 1'd0) & (stopSend_load_load_fu_787_p1 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd8));
end

always @ (*) begin
    ap_condition_584 = ((iperfFsmState_load_load_fu_764_p1 == 4'd0) | ((iperfFsmState_load_load_fu_764_p1 == 4'd10) | ((iperfFsmState_load_load_fu_764_p1 == 4'd11) | ((iperfFsmState_load_load_fu_764_p1 == 4'd12) | ((iperfFsmState_load_load_fu_764_p1 == 4'd13) | ((iperfFsmState_load_load_fu_764_p1 == 4'd14) | (iperfFsmState_load_load_fu_764_p1 == 4'd15)))))));
end

always @ (*) begin
    ap_condition_610 = ((grp_fu_755_p2 == 1'd1) & (tmp_i_nbreadreq_fu_364_p3 == 1'd1) & (iperfFsmState == 4'd2));
end

always @ (*) begin
    ap_condition_695 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_710 = ((ipAddressIdx_V_load_load_fu_1115_p1 == 4'd9) & (icmp_ln1072_fu_1110_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd1));
end

always @ (*) begin
    ap_condition_714 = ((ipAddressIdx_V_load_load_fu_1115_p1 == 4'd8) & (icmp_ln1072_fu_1110_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd1));
end

always @ (*) begin
    ap_condition_717 = ((ipAddressIdx_V_load_load_fu_1115_p1 == 4'd7) & (icmp_ln1072_fu_1110_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd1));
end

always @ (*) begin
    ap_condition_720 = ((ipAddressIdx_V_load_load_fu_1115_p1 == 4'd6) & (icmp_ln1072_fu_1110_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd1));
end

always @ (*) begin
    ap_condition_723 = ((ipAddressIdx_V_load_load_fu_1115_p1 == 4'd5) & (icmp_ln1072_fu_1110_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd1));
end

always @ (*) begin
    ap_condition_726 = ((ipAddressIdx_V_load_load_fu_1115_p1 == 4'd4) & (icmp_ln1072_fu_1110_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd1));
end

always @ (*) begin
    ap_condition_729 = ((ipAddressIdx_V_load_load_fu_1115_p1 == 4'd3) & (icmp_ln1072_fu_1110_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd1));
end

always @ (*) begin
    ap_condition_732 = ((ipAddressIdx_V_load_load_fu_1115_p1 == 4'd2) & (icmp_ln1072_fu_1110_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd1));
end

always @ (*) begin
    ap_condition_735 = ((ipAddressIdx_V_load_load_fu_1115_p1 == 4'd1) & (icmp_ln1072_fu_1110_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd1));
end

always @ (*) begin
    ap_condition_738 = ((ipAddressIdx_V_load_load_fu_1115_p1 == 4'd0) & (icmp_ln1072_fu_1110_p2 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd1));
end

always @ (*) begin
    ap_condition_747 = (((icmp_ln1068_1_fu_818_p2 == 1'd0) & (stopSend_load_load_fu_787_p1 == 1'd0) & (iperfFsmState_load_load_fu_764_p1 == 4'd8)) | ((icmp_ln1068_1_fu_818_p2 == 1'd0) & (icmp_ln1064_2_fu_799_p2 == 1'd0) & (iperfFsmState_load_load_fu_764_p1 == 4'd8)));
end

always @ (*) begin
    ap_condition_750 = ((icmp_ln1064_2_fu_799_p2 == 1'd1) & (stopSend_load_load_fu_787_p1 == 1'd1) & (iperfFsmState_load_load_fu_764_p1 == 4'd8));
end

always @ (*) begin
    ap_condition_753 = ((grp_fu_732_p4 == 2'd0) & (grp_nbreadreq_fu_350_p3 == 1'd1) & (iperfFsmState == 4'd6));
end

always @ (*) begin
    ap_condition_756 = ((grp_fu_732_p4 == 2'd0) & (icmp_ln1064_1_fu_1038_p2 == 1'd0) & (grp_nbreadreq_fu_350_p3 == 1'd1) & (iperfFsmState == 4'd3));
end

always @ (*) begin
    ap_condition_778 = (~(iperfFsmState_load_load_fu_764_p1 == 4'd5) & ~(iperfFsmState_load_load_fu_764_p1 == 4'd4) & ~(iperfFsmState_load_load_fu_764_p1 == 4'd9) & ~(iperfFsmState_load_load_fu_764_p1 == 4'd1) & ~(iperfFsmState_load_load_fu_764_p1 == 4'd7) & ~(iperfFsmState_load_load_fu_764_p1 == 4'd8) & ~(iperfFsmState == 4'd2) & ~(iperfFsmState == 4'd3) & ~(iperfFsmState == 4'd6) & (runExperiment_read_reg_1400 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_openTuple_ip_address_V_10_reg_703 = 'bx;

assign ap_phi_reg_pp0_iter0_timeOver_flag_1_i_reg_681 = 'bx;

assign ap_phi_reg_pp0_iter0_timeOver_new_1_i_reg_693 = 'bx;

assign ap_phi_reg_pp0_iter1_closeIt_V_loc_0_i_reg_416 = 'bx;

assign ap_phi_reg_pp0_iter1_packetGapCounter_V_new_0_i_reg_425 = 'bx;

assign ap_phi_reg_pp0_iter1_sessionIt_V_flag_4_i_reg_435 = 'bx;

assign ap_phi_reg_pp0_iter1_sessionIt_V_new_4_i_reg_485 = 'bx;

assign ap_phi_reg_pp0_iter1_timeOver_flag_0_i_reg_532 = 'bx;

assign ap_phi_reg_pp0_iter1_wordCount_V_flag_1_i_reg_582 = 'bx;

assign ap_phi_reg_pp0_iter1_wordCount_V_new_1_i_reg_632 = 'bx;

always @ (*) begin
    ap_predicate_op107_read_state2 = ((grp_nbreadreq_fu_350_p3 == 1'd1) & (iperfFsmState == 4'd6));
end

always @ (*) begin
    ap_predicate_op141_read_state2 = ((icmp_ln1064_1_fu_1038_p2 == 1'd0) & (grp_nbreadreq_fu_350_p3 == 1'd1) & (iperfFsmState == 4'd3));
end

always @ (*) begin
    ap_predicate_op158_read_state2 = ((tmp_i_nbreadreq_fu_364_p3 == 1'd1) & (iperfFsmState == 4'd2));
end

always @ (*) begin
    ap_predicate_op228_write_state3 = ((icmp_ln1064_2_reg_1432 == 1'd0) & (stopSend_load_reg_1421 == 1'd1) & (iperfFsmState_load_reg_1413 == 4'd8));
end

always @ (*) begin
    ap_predicate_op235_write_state3 = ((timeOver_load_reg_1417 == 1'd0) & (iperfFsmState_load_reg_1413 == 4'd5));
end

always @ (*) begin
    ap_predicate_op240_write_state3 = (~(tmp_error_V_2_reg_760 == 2'd1) & ~(tmp_error_V_2_reg_760 == 2'd0) & (tmp_1_i_reg_1444 == 1'd1) & (iperfFsmState_load_reg_1413 == 4'd6));
end

always @ (*) begin
    ap_predicate_op248_write_state3 = ((icmp_ln231_reg_1468 == 1'd0) & (tmp_i_reg_1459 == 1'd1) & (iperfFsmState_load_reg_1413 == 4'd2));
end

always @ (*) begin
    ap_predicate_op250_write_state3 = ((icmp_ln1064_5_reg_1472 == 1'd1) & (tmp_i_reg_1459 == 1'd1) & (iperfFsmState_load_reg_1413 == 4'd2));
end

always @ (*) begin
    ap_predicate_op254_write_state3 = ((icmp_ln1072_reg_1476 == 1'd1) & (iperfFsmState_load_reg_1413 == 4'd1));
end

always @ (*) begin
    ap_predicate_op255_write_state4 = ((icmp_ln1064_2_reg_1432_pp0_iter2_reg == 1'd0) & (stopSend_load_reg_1421_pp0_iter2_reg == 1'd1) & (iperfFsmState_load_reg_1413_pp0_iter2_reg == 4'd8));
end

always @ (*) begin
    ap_predicate_op256_write_state4 = ((icmp_ln1072_reg_1476_pp0_iter2_reg == 1'd1) & (iperfFsmState_load_reg_1413_pp0_iter2_reg == 4'd1));
end

assign currWord_last_V_fu_843_p2 = ((add_ln885_2_fu_836_p2 == pkgWordCount_read_reg_1381) ? 1'b1 : 1'b0);

assign grp_fu_732_p4 = {{txStatusBuffer_dout[17:16]}};

assign grp_fu_742_p2 = ($signed(numConnections_V) + $signed(14'd16383));

assign grp_fu_747_p2 = (sessionIt_V + 14'd1);

assign grp_fu_755_p2 = ((grp_fu_747_p2 == useConn_read_reg_1389) ? 1'b1 : 1'b0);

assign grp_nbreadreq_fu_350_p3 = txStatusBuffer_empty_n;

assign icmp_ln1064_1_fu_1038_p2 = ((sessionIt_V == numConnections_V) ? 1'b1 : 1'b0);

assign icmp_ln1064_2_fu_799_p2 = ((closeIt_V == numConnections_V) ? 1'b1 : 1'b0);

assign icmp_ln1064_4_fu_1129_p2 = ((zext_ln1064_fu_1125_p1 == useIpAddr_read_reg_1362) ? 1'b1 : 1'b0);

assign icmp_ln1064_fu_1165_p2 = ((add_ln885_fu_1158_p2 == packetGap_read_reg_1375) ? 1'b1 : 1'b0);

assign icmp_ln1068_1_fu_818_p2 = ((ap_phi_mux_closeIt_V_loc_0_i_phi_fu_419_p4 == numConnections_V) ? 1'b1 : 1'b0);

assign icmp_ln1068_fu_848_p2 = ((packetGap_read_reg_1375 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1072_fu_1110_p2 = ((sessionIt_V < useConn_read_reg_1389) ? 1'b1 : 1'b0);

assign icmp_ln231_fu_1086_p2 = ((tmp_success_V_fu_1076_p4 == 8'd0) ? 1'b1 : 1'b0);

assign ipAddressIdx_V_load_load_fu_1115_p1 = ipAddressIdx_V;

assign iperfFsmState_load_load_fu_764_p1 = iperfFsmState;

assign m_axis_close_connection_TVALID = regslice_both_m_axis_close_connection_U_vld_out;

assign m_axis_open_connection_TDATA_int_regslice = or_ln173_2_fu_1299_p3;

assign m_axis_open_connection_TVALID = regslice_both_m_axis_open_connection_U_vld_out;

assign or_ln173_1_fu_1287_p3 = {{7'd64}, {tmp_sessionID_V_reg_1463}};

assign or_ln173_2_fu_1299_p3 = {{13'd5001}, {ap_phi_reg_pp0_iter2_openTuple_ip_address_V_10_reg_703}};

assign or_ln173_fu_1237_p2 = (shl_ln_fu_1230_p3 | 577'd247330401473104534049986387036794404265444427179859539717357571501504676384200448144401845323817807855737010027930728666130808966645273754506324562903351815651596089160773936);

assign p_Result_10_fu_972_p5 = {{p_Result_9_fu_951_p5[31:16]}, {p_Result_4_i_fu_963_p4}, {p_Result_9_fu_951_p5[7:0]}};

assign p_Result_11_fu_993_p5 = {{p_Result_10_fu_972_p5[31:24]}, {p_Result_6_i_fu_984_p4}, {p_Result_10_fu_972_p5[15:0]}};

assign p_Result_12_fu_1008_p5 = {{trunc_ln674_fu_1005_p1}, {p_Result_11_fu_993_p5[23:0]}};

assign p_Result_4_i_fu_963_p4 = {{seconds_V_reg_1367[23:16]}};

assign p_Result_6_i_fu_984_p4 = {{seconds_V_reg_1367[15:8]}};

assign p_Result_7_fu_918_p5 = {{header_header_V[511:32]}, {p_cast_fu_911_p3}};

assign p_Result_8_fu_930_p5 = {{p_Result_7_fu_918_p5[511:96]}, {16'd35091}, {p_Result_7_fu_918_p5[79:0]}};

assign p_Result_9_fu_951_p5 = {{ap_const_lv32_0[31:8]}, {p_Result_i_fu_942_p4}};

assign p_Result_i_fu_942_p4 = {{seconds_V_reg_1367[31:24]}};

assign p_Result_s_fu_1020_p5 = {{p_Result_8_fu_930_p5[511:192]}, {p_Result_12_fu_1008_p5}, {p_Result_8_fu_930_p5[159:0]}};

assign p_cast_fu_911_p3 = ((en_reg_1395[0:0] == 1'b1) ? 32'd16777344 : 32'd0);

assign select_ln215_fu_1134_p3 = ((icmp_ln1064_4_fu_1129_p2[0:0] == 1'b1) ? 4'd0 : add_ln885_5_fu_1119_p2);

assign select_ln365_fu_853_p3 = ((icmp_ln1068_fu_848_p2[0:0] == 1'b1) ? 4'd9 : 4'd8);

assign shl_ln_fu_1230_p3 = {{currWord_last_V_reg_1439}, {576'd0}};

assign startSignalFifo_din = 1'd1;

assign stopSend_load_load_fu_787_p1 = stopSend;

assign timeOver_load_load_fu_783_p1 = timeOver;

assign tmp_1_fu_1248_p4 = {{{pkgWordCount_read_reg_1381_pp0_iter1_reg}, {6'd0}}, {currentSessionID_V_load_reg_1425}};

assign tmp_2_fu_1261_p4 = {{{pkgWordCount_read_reg_1381_pp0_iter1_reg}, {6'd0}}, {tmp_sessionID_V_2_reg_1448}};

assign tmp_5_i_nbreadreq_fu_336_p3 = stopSignalFifo_empty_n;

assign tmp_fu_1274_p4 = {{{pkgWordCount_read_reg_1381_pp0_iter1_reg}, {6'd0}}, {currentSessionID_V_load_reg_1425}};

assign tmp_i_nbreadreq_fu_364_p3 = openConStatusBuffer_empty_n;

assign tmp_sessionID_V_1_fu_1044_p1 = txStatusBuffer_dout[15:0];

assign tmp_sessionID_V_2_fu_879_p1 = txStatusBuffer_dout[15:0];

assign tmp_sessionID_V_fu_1072_p1 = openConStatusBuffer_dout[15:0];

assign tmp_success_V_fu_1076_p4 = {{openConStatusBuffer_dout[23:16]}};

assign trunc_ln674_fu_1005_p1 = seconds_V_reg_1367[7:0];

assign zext_ln1064_fu_1125_p1 = add_ln885_5_fu_1119_p2;

assign zext_ln173_1_fu_1243_p1 = or_ln173_fu_1237_p2;

assign zext_ln173_2_fu_1256_p1 = tmp_1_fu_1248_p4;

assign zext_ln173_3_fu_1294_p1 = or_ln173_1_fu_1287_p3;

assign zext_ln173_4_fu_1269_p1 = tmp_2_fu_1261_p4;

assign zext_ln173_fu_1282_p1 = tmp_fu_1274_p4;

endmodule //iperf_client_client_512_s
