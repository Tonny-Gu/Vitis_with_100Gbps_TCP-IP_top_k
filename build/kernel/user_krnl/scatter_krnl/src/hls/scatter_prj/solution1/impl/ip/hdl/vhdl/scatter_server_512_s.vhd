-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity scatter_server_512_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    usePort_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    usePort_empty_n : IN STD_LOGIC;
    usePort_read : OUT STD_LOGIC;
    regBasePort_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    regBasePort_empty_n : IN STD_LOGIC;
    regBasePort_read : OUT STD_LOGIC;
    runExperiment_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    runExperiment_empty_n : IN STD_LOGIC;
    runExperiment_read : OUT STD_LOGIC;
    s_axis_listen_port_status_TVALID : IN STD_LOGIC;
    s_axis_notifications_TVALID : IN STD_LOGIC;
    s_axis_rx_metadata_TVALID : IN STD_LOGIC;
    rxDataBuffer_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
    rxDataBuffer_empty_n : IN STD_LOGIC;
    rxDataBuffer_read : OUT STD_LOGIC;
    m_axis_listen_port_TREADY : IN STD_LOGIC;
    m_axis_read_package_TREADY : IN STD_LOGIC;
    m_axis_listen_port_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axis_listen_port_TVALID : OUT STD_LOGIC;
    s_axis_listen_port_status_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    s_axis_listen_port_status_TREADY : OUT STD_LOGIC;
    s_axis_notifications_TDATA : IN STD_LOGIC_VECTOR (87 downto 0);
    s_axis_notifications_TREADY : OUT STD_LOGIC;
    m_axis_read_package_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axis_read_package_TVALID : OUT STD_LOGIC;
    s_axis_rx_metadata_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    s_axis_rx_metadata_TREADY : OUT STD_LOGIC );
end;


architecture behav of scatter_server_512_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal listenState_load_load_fu_266_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_i_nbreadreq_fu_122_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op27_read_state1 : BOOLEAN;
    signal tmp_7_i_nbreadreq_fu_136_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_nbreadreq_fu_150_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nbreadreq_fu_158_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op65_read_state1 : BOOLEAN;
    signal ap_predicate_op66_read_state1 : BOOLEAN;
    signal ap_predicate_op75_read_state1 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal listenState_load_reg_404 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_i_reg_416 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1068_reg_420 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op83_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal listenState_load_reg_404_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_i_reg_416_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1068_reg_420_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op85_write_state3 : BOOLEAN;
    signal regslice_both_m_axis_listen_port_U_apdone_blk : STD_LOGIC;
    signal regslice_both_m_axis_read_package_U_apdone_blk : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal listenState : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal currentPort_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal openedPort_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal serverFsmState : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal m_axis_listen_port_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal s_axis_listen_port_status_TDATA_blk_n : STD_LOGIC;
    signal s_axis_notifications_TDATA_blk_n : STD_LOGIC;
    signal m_axis_read_package_TDATA_blk_n : STD_LOGIC;
    signal s_axis_rx_metadata_TDATA_blk_n : STD_LOGIC;
    signal runExperiment_blk_n : STD_LOGIC;
    signal usePort_blk_n : STD_LOGIC;
    signal regBasePort_blk_n : STD_LOGIC;
    signal rxDataBuffer_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal currentPort_V_load_reg_408 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1068_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln173_fu_381_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln173_reg_424 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_currentPort_V_flag_4_i_phi_fu_195_p12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_currentPort_V_flag_4_i_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal runExperiment_read_read_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_278_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_currentPort_V_new_4_i_phi_fu_217_p12 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_currentPort_V_new_4_i_reg_214 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln435_fu_301_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_openedPort_V_new_3_i_phi_fu_239_p12 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_openedPort_V_new_3_i_reg_236 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln435_1_fu_310_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln427_fu_331_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_258_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal add_ln885_1_fu_289_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1064_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln885_fu_283_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln144_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln144_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_length_V_fu_365_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal m_axis_listen_port_TVALID_int_regslice : STD_LOGIC;
    signal m_axis_listen_port_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_m_axis_listen_port_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_listen_port_status_U_apdone_blk : STD_LOGIC;
    signal s_axis_listen_port_status_TDATA_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal s_axis_listen_port_status_TVALID_int_regslice : STD_LOGIC;
    signal s_axis_listen_port_status_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_s_axis_listen_port_status_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_notifications_U_apdone_blk : STD_LOGIC;
    signal s_axis_notifications_TDATA_int_regslice : STD_LOGIC_VECTOR (87 downto 0);
    signal s_axis_notifications_TVALID_int_regslice : STD_LOGIC;
    signal s_axis_notifications_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_s_axis_notifications_U_ack_in : STD_LOGIC;
    signal m_axis_read_package_TVALID_int_regslice : STD_LOGIC;
    signal m_axis_read_package_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_m_axis_read_package_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_rx_metadata_U_apdone_blk : STD_LOGIC;
    signal s_axis_rx_metadata_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal s_axis_rx_metadata_TVALID_int_regslice : STD_LOGIC;
    signal s_axis_rx_metadata_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_s_axis_rx_metadata_U_ack_in : STD_LOGIC;
    signal ap_condition_241 : BOOLEAN;
    signal ap_condition_481 : BOOLEAN;
    signal ap_condition_480 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component scatter_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_m_axis_listen_port_U : component scatter_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => currentPort_V_load_reg_408,
        vld_in => m_axis_listen_port_TVALID_int_regslice,
        ack_in => m_axis_listen_port_TREADY_int_regslice,
        data_out => m_axis_listen_port_TDATA,
        vld_out => regslice_both_m_axis_listen_port_U_vld_out,
        ack_out => m_axis_listen_port_TREADY,
        apdone_blk => regslice_both_m_axis_listen_port_U_apdone_blk);

    regslice_both_s_axis_listen_port_status_U : component scatter_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_listen_port_status_TDATA,
        vld_in => s_axis_listen_port_status_TVALID,
        ack_in => regslice_both_s_axis_listen_port_status_U_ack_in,
        data_out => s_axis_listen_port_status_TDATA_int_regslice,
        vld_out => s_axis_listen_port_status_TVALID_int_regslice,
        ack_out => s_axis_listen_port_status_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_listen_port_status_U_apdone_blk);

    regslice_both_s_axis_notifications_U : component scatter_regslice_both
    generic map (
        DataWidth => 88)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_notifications_TDATA,
        vld_in => s_axis_notifications_TVALID,
        ack_in => regslice_both_s_axis_notifications_U_ack_in,
        data_out => s_axis_notifications_TDATA_int_regslice,
        vld_out => s_axis_notifications_TVALID_int_regslice,
        ack_out => s_axis_notifications_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_notifications_U_apdone_blk);

    regslice_both_m_axis_read_package_U : component scatter_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => trunc_ln173_reg_424,
        vld_in => m_axis_read_package_TVALID_int_regslice,
        ack_in => m_axis_read_package_TREADY_int_regslice,
        data_out => m_axis_read_package_TDATA,
        vld_out => regslice_both_m_axis_read_package_U_vld_out,
        ack_out => m_axis_read_package_TREADY,
        apdone_blk => regslice_both_m_axis_read_package_U_apdone_blk);

    regslice_both_s_axis_rx_metadata_U : component scatter_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_rx_metadata_TDATA,
        vld_in => s_axis_rx_metadata_TVALID,
        ack_in => regslice_both_s_axis_rx_metadata_U_ack_in,
        data_out => s_axis_rx_metadata_TDATA_int_regslice,
        vld_out => s_axis_rx_metadata_TVALID_int_regslice,
        ack_out => s_axis_rx_metadata_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_rx_metadata_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    listenState_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                listenState <= ap_const_lv2_0;
            else
                if ((ap_const_boolean_1 = ap_condition_241)) then
                    if (((listenState_load_load_fu_266_p1 = ap_const_lv2_0) and (runExperiment_read_read_fu_116_p2 = ap_const_lv1_1))) then 
                        listenState <= ap_const_lv2_1;
                    elsif ((listenState_load_load_fu_266_p1 = ap_const_lv2_1)) then 
                        listenState <= ap_const_lv2_2;
                    elsif (((tmp_i_nbreadreq_fu_122_p3 = ap_const_lv1_1) and (listenState = ap_const_lv2_2))) then 
                        listenState <= zext_ln427_fu_331_p1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    serverFsmState_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_480)) then
                if (((serverFsmState = ap_const_lv1_1) and (grp_fu_258_p3 = ap_const_lv1_1))) then 
                    serverFsmState <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_condition_481)) then 
                    serverFsmState <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_currentPort_V_flag_4_i_phi_fu_195_p12 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                currentPort_V <= ap_phi_mux_currentPort_V_new_4_i_phi_fu_217_p12;
                openedPort_V <= ap_phi_mux_openedPort_V_new_3_i_phi_fu_239_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                currentPort_V_load_reg_408 <= currentPort_V;
                icmp_ln1068_reg_420_pp0_iter1_reg <= icmp_ln1068_reg_420;
                listenState_load_reg_404 <= listenState;
                listenState_load_reg_404_pp0_iter1_reg <= listenState_load_reg_404;
                tmp_7_i_reg_416 <= tmp_7_i_nbreadreq_fu_136_p3;
                tmp_7_i_reg_416_pp0_iter1_reg <= tmp_7_i_reg_416;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_7_i_nbreadreq_fu_136_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln1068_reg_420 <= icmp_ln1068_fu_375_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_7_i_nbreadreq_fu_136_p3 = ap_const_lv1_1) and (icmp_ln1068_fu_375_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                trunc_ln173_reg_424 <= trunc_ln173_fu_381_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln885_1_fu_289_p2 <= std_logic_vector(unsigned(openedPort_V) + unsigned(ap_const_lv16_1));
    add_ln885_fu_283_p2 <= std_logic_vector(unsigned(currentPort_V) + unsigned(ap_const_lv16_1));
    and_ln144_fu_319_p2 <= (tmp_fu_278_p1 and icmp_ln1064_fu_295_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, usePort_empty_n, regBasePort_empty_n, runExperiment_empty_n, ap_predicate_op27_read_state1, tmp_7_i_nbreadreq_fu_136_p3, ap_predicate_op65_read_state1, rxDataBuffer_empty_n, ap_predicate_op66_read_state1, ap_predicate_op75_read_state1, ap_done_reg, listenState_load_reg_404, ap_predicate_op83_write_state2, listenState_load_reg_404_pp0_iter1_reg, ap_predicate_op85_write_state3, regslice_both_m_axis_listen_port_U_apdone_blk, regslice_both_m_axis_read_package_U_apdone_blk, m_axis_listen_port_TREADY_int_regslice, s_axis_listen_port_status_TVALID_int_regslice, s_axis_notifications_TVALID_int_regslice, m_axis_read_package_TREADY_int_regslice, s_axis_rx_metadata_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_m_axis_read_package_U_apdone_blk = ap_const_logic_1) or (regslice_both_m_axis_listen_port_U_apdone_blk = ap_const_logic_1) or ((m_axis_read_package_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op85_write_state3 = ap_const_boolean_1)) or ((m_axis_listen_port_TREADY_int_regslice = ap_const_logic_0) and (listenState_load_reg_404_pp0_iter1_reg = ap_const_lv2_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((m_axis_read_package_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op83_write_state2 = ap_const_boolean_1)) or ((m_axis_listen_port_TREADY_int_regslice = ap_const_logic_0) and (listenState_load_reg_404 = ap_const_lv2_1)))) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or (runExperiment_empty_n = ap_const_logic_0) or (regBasePort_empty_n = ap_const_logic_0) or (usePort_empty_n = ap_const_logic_0) or ((ap_predicate_op75_read_state1 = ap_const_boolean_1) and (rxDataBuffer_empty_n = ap_const_logic_0)) or ((ap_predicate_op66_read_state1 = ap_const_boolean_1) and (rxDataBuffer_empty_n = ap_const_logic_0)) or ((ap_predicate_op65_read_state1 = ap_const_boolean_1) and (s_axis_rx_metadata_TVALID_int_regslice = ap_const_logic_0)) or ((tmp_7_i_nbreadreq_fu_136_p3 = ap_const_lv1_1) and (s_axis_notifications_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op27_read_state1 = ap_const_boolean_1) and (s_axis_listen_port_status_TVALID_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, usePort_empty_n, regBasePort_empty_n, runExperiment_empty_n, ap_predicate_op27_read_state1, tmp_7_i_nbreadreq_fu_136_p3, ap_predicate_op65_read_state1, rxDataBuffer_empty_n, ap_predicate_op66_read_state1, ap_predicate_op75_read_state1, ap_done_reg, listenState_load_reg_404, ap_predicate_op83_write_state2, ap_block_state2_io, listenState_load_reg_404_pp0_iter1_reg, ap_predicate_op85_write_state3, regslice_both_m_axis_listen_port_U_apdone_blk, regslice_both_m_axis_read_package_U_apdone_blk, ap_block_state3_io, m_axis_listen_port_TREADY_int_regslice, s_axis_listen_port_status_TVALID_int_regslice, s_axis_notifications_TVALID_int_regslice, m_axis_read_package_TREADY_int_regslice, s_axis_rx_metadata_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_m_axis_read_package_U_apdone_blk = ap_const_logic_1) or (regslice_both_m_axis_listen_port_U_apdone_blk = ap_const_logic_1) or ((m_axis_read_package_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op85_write_state3 = ap_const_boolean_1)) or ((m_axis_listen_port_TREADY_int_regslice = ap_const_logic_0) and (listenState_load_reg_404_pp0_iter1_reg = ap_const_lv2_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((m_axis_read_package_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op83_write_state2 = ap_const_boolean_1)) or ((m_axis_listen_port_TREADY_int_regslice = ap_const_logic_0) and (listenState_load_reg_404 = ap_const_lv2_1)))) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or (runExperiment_empty_n = ap_const_logic_0) or (regBasePort_empty_n = ap_const_logic_0) or (usePort_empty_n = ap_const_logic_0) or ((ap_predicate_op75_read_state1 = ap_const_boolean_1) and (rxDataBuffer_empty_n = ap_const_logic_0)) or ((ap_predicate_op66_read_state1 = ap_const_boolean_1) and (rxDataBuffer_empty_n = ap_const_logic_0)) or ((ap_predicate_op65_read_state1 = ap_const_boolean_1) and (s_axis_rx_metadata_TVALID_int_regslice = ap_const_logic_0)) or ((tmp_7_i_nbreadreq_fu_136_p3 = ap_const_lv1_1) and (s_axis_notifications_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op27_read_state1 = ap_const_boolean_1) and (s_axis_listen_port_status_TVALID_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, usePort_empty_n, regBasePort_empty_n, runExperiment_empty_n, ap_predicate_op27_read_state1, tmp_7_i_nbreadreq_fu_136_p3, ap_predicate_op65_read_state1, rxDataBuffer_empty_n, ap_predicate_op66_read_state1, ap_predicate_op75_read_state1, ap_done_reg, listenState_load_reg_404, ap_predicate_op83_write_state2, ap_block_state2_io, listenState_load_reg_404_pp0_iter1_reg, ap_predicate_op85_write_state3, regslice_both_m_axis_listen_port_U_apdone_blk, regslice_both_m_axis_read_package_U_apdone_blk, ap_block_state3_io, m_axis_listen_port_TREADY_int_regslice, s_axis_listen_port_status_TVALID_int_regslice, s_axis_notifications_TVALID_int_regslice, m_axis_read_package_TREADY_int_regslice, s_axis_rx_metadata_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_m_axis_read_package_U_apdone_blk = ap_const_logic_1) or (regslice_both_m_axis_listen_port_U_apdone_blk = ap_const_logic_1) or ((m_axis_read_package_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op85_write_state3 = ap_const_boolean_1)) or ((m_axis_listen_port_TREADY_int_regslice = ap_const_logic_0) and (listenState_load_reg_404_pp0_iter1_reg = ap_const_lv2_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((m_axis_read_package_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op83_write_state2 = ap_const_boolean_1)) or ((m_axis_listen_port_TREADY_int_regslice = ap_const_logic_0) and (listenState_load_reg_404 = ap_const_lv2_1)))) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or (runExperiment_empty_n = ap_const_logic_0) or (regBasePort_empty_n = ap_const_logic_0) or (usePort_empty_n = ap_const_logic_0) or ((ap_predicate_op75_read_state1 = ap_const_boolean_1) and (rxDataBuffer_empty_n = ap_const_logic_0)) or ((ap_predicate_op66_read_state1 = ap_const_boolean_1) and (rxDataBuffer_empty_n = ap_const_logic_0)) or ((ap_predicate_op65_read_state1 = ap_const_boolean_1) and (s_axis_rx_metadata_TVALID_int_regslice = ap_const_logic_0)) or ((tmp_7_i_nbreadreq_fu_136_p3 = ap_const_lv1_1) and (s_axis_notifications_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op27_read_state1 = ap_const_boolean_1) and (s_axis_listen_port_status_TVALID_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(usePort_empty_n, regBasePort_empty_n, runExperiment_empty_n, ap_predicate_op27_read_state1, tmp_7_i_nbreadreq_fu_136_p3, ap_predicate_op65_read_state1, rxDataBuffer_empty_n, ap_predicate_op66_read_state1, ap_predicate_op75_read_state1, ap_done_reg, s_axis_listen_port_status_TVALID_int_regslice, s_axis_notifications_TVALID_int_regslice, s_axis_rx_metadata_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or (runExperiment_empty_n = ap_const_logic_0) or (regBasePort_empty_n = ap_const_logic_0) or (usePort_empty_n = ap_const_logic_0) or ((ap_predicate_op75_read_state1 = ap_const_boolean_1) and (rxDataBuffer_empty_n = ap_const_logic_0)) or ((ap_predicate_op66_read_state1 = ap_const_boolean_1) and (rxDataBuffer_empty_n = ap_const_logic_0)) or ((ap_predicate_op65_read_state1 = ap_const_boolean_1) and (s_axis_rx_metadata_TVALID_int_regslice = ap_const_logic_0)) or ((tmp_7_i_nbreadreq_fu_136_p3 = ap_const_lv1_1) and (s_axis_notifications_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op27_read_state1 = ap_const_boolean_1) and (s_axis_listen_port_status_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state2_io_assign_proc : process(listenState_load_reg_404, ap_predicate_op83_write_state2, m_axis_listen_port_TREADY_int_regslice, m_axis_read_package_TREADY_int_regslice)
    begin
                ap_block_state2_io <= (((m_axis_read_package_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op83_write_state2 = ap_const_boolean_1)) or ((m_axis_listen_port_TREADY_int_regslice = ap_const_logic_0) and (listenState_load_reg_404 = ap_const_lv2_1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(listenState_load_reg_404, ap_predicate_op83_write_state2, m_axis_listen_port_TREADY_int_regslice, m_axis_read_package_TREADY_int_regslice)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((m_axis_read_package_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op83_write_state2 = ap_const_boolean_1)) or ((m_axis_listen_port_TREADY_int_regslice = ap_const_logic_0) and (listenState_load_reg_404 = ap_const_lv2_1)));
    end process;


    ap_block_state3_io_assign_proc : process(listenState_load_reg_404_pp0_iter1_reg, ap_predicate_op85_write_state3, m_axis_listen_port_TREADY_int_regslice, m_axis_read_package_TREADY_int_regslice)
    begin
                ap_block_state3_io <= (((m_axis_read_package_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op85_write_state3 = ap_const_boolean_1)) or ((m_axis_listen_port_TREADY_int_regslice = ap_const_logic_0) and (listenState_load_reg_404_pp0_iter1_reg = ap_const_lv2_1)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(listenState_load_reg_404_pp0_iter1_reg, ap_predicate_op85_write_state3, regslice_both_m_axis_listen_port_U_apdone_blk, regslice_both_m_axis_read_package_U_apdone_blk, m_axis_listen_port_TREADY_int_regslice, m_axis_read_package_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((regslice_both_m_axis_read_package_U_apdone_blk = ap_const_logic_1) or (regslice_both_m_axis_listen_port_U_apdone_blk = ap_const_logic_1) or ((m_axis_read_package_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op85_write_state3 = ap_const_boolean_1)) or ((m_axis_listen_port_TREADY_int_regslice = ap_const_logic_0) and (listenState_load_reg_404_pp0_iter1_reg = ap_const_lv2_1)));
    end process;


    ap_condition_241_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_241 <= ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_480_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, grp_nbreadreq_fu_158_p3, ap_block_pp0_stage0_11001)
    begin
                ap_condition_480 <= ((grp_nbreadreq_fu_158_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_481_assign_proc : process(tmp_9_i_nbreadreq_fu_150_p3, serverFsmState, grp_fu_258_p3)
    begin
                ap_condition_481 <= ((tmp_9_i_nbreadreq_fu_150_p3 = ap_const_lv1_1) and (serverFsmState = ap_const_lv1_0) and (grp_fu_258_p3 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter2, ap_done_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_currentPort_V_flag_4_i_phi_fu_195_p12_assign_proc : process(listenState_load_load_fu_266_p1, tmp_i_nbreadreq_fu_122_p3, listenState, ap_phi_reg_pp0_iter0_currentPort_V_flag_4_i_reg_192, runExperiment_read_read_fu_116_p2, tmp_fu_278_p1)
    begin
        if (((tmp_i_nbreadreq_fu_122_p3 = ap_const_lv1_1) and (listenState = ap_const_lv2_2))) then 
            ap_phi_mux_currentPort_V_flag_4_i_phi_fu_195_p12 <= tmp_fu_278_p1;
        elsif ((((listenState_load_load_fu_266_p1 = ap_const_lv2_0) and (runExperiment_read_read_fu_116_p2 = ap_const_lv1_0)) or ((listenState_load_load_fu_266_p1 = ap_const_lv2_0) and (runExperiment_read_read_fu_116_p2 = ap_const_lv1_1)))) then 
            ap_phi_mux_currentPort_V_flag_4_i_phi_fu_195_p12 <= ap_const_lv1_1;
        elsif (((listenState_load_load_fu_266_p1 = ap_const_lv2_3) or (listenState_load_load_fu_266_p1 = ap_const_lv2_1) or ((tmp_i_nbreadreq_fu_122_p3 = ap_const_lv1_0) and (listenState = ap_const_lv2_2)))) then 
            ap_phi_mux_currentPort_V_flag_4_i_phi_fu_195_p12 <= ap_const_lv1_0;
        else 
            ap_phi_mux_currentPort_V_flag_4_i_phi_fu_195_p12 <= ap_phi_reg_pp0_iter0_currentPort_V_flag_4_i_reg_192;
        end if; 
    end process;


    ap_phi_mux_currentPort_V_new_4_i_phi_fu_217_p12_assign_proc : process(regBasePort_dout, listenState_load_load_fu_266_p1, tmp_i_nbreadreq_fu_122_p3, listenState, runExperiment_read_read_fu_116_p2, ap_phi_reg_pp0_iter0_currentPort_V_new_4_i_reg_214, select_ln435_fu_301_p3)
    begin
        if (((tmp_i_nbreadreq_fu_122_p3 = ap_const_lv1_1) and (listenState = ap_const_lv2_2))) then 
            ap_phi_mux_currentPort_V_new_4_i_phi_fu_217_p12 <= select_ln435_fu_301_p3;
        elsif (((listenState_load_load_fu_266_p1 = ap_const_lv2_0) and (runExperiment_read_read_fu_116_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_currentPort_V_new_4_i_phi_fu_217_p12 <= ap_const_lv16_0;
        elsif (((listenState_load_load_fu_266_p1 = ap_const_lv2_0) and (runExperiment_read_read_fu_116_p2 = ap_const_lv1_1))) then 
            ap_phi_mux_currentPort_V_new_4_i_phi_fu_217_p12 <= regBasePort_dout;
        else 
            ap_phi_mux_currentPort_V_new_4_i_phi_fu_217_p12 <= ap_phi_reg_pp0_iter0_currentPort_V_new_4_i_reg_214;
        end if; 
    end process;


    ap_phi_mux_openedPort_V_new_3_i_phi_fu_239_p12_assign_proc : process(listenState_load_load_fu_266_p1, tmp_i_nbreadreq_fu_122_p3, listenState, runExperiment_read_read_fu_116_p2, ap_phi_reg_pp0_iter0_openedPort_V_new_3_i_reg_236, select_ln435_1_fu_310_p3)
    begin
        if (((tmp_i_nbreadreq_fu_122_p3 = ap_const_lv1_1) and (listenState = ap_const_lv2_2))) then 
            ap_phi_mux_openedPort_V_new_3_i_phi_fu_239_p12 <= select_ln435_1_fu_310_p3;
        elsif ((((listenState_load_load_fu_266_p1 = ap_const_lv2_0) and (runExperiment_read_read_fu_116_p2 = ap_const_lv1_0)) or ((listenState_load_load_fu_266_p1 = ap_const_lv2_0) and (runExperiment_read_read_fu_116_p2 = ap_const_lv1_1)))) then 
            ap_phi_mux_openedPort_V_new_3_i_phi_fu_239_p12 <= ap_const_lv16_0;
        else 
            ap_phi_mux_openedPort_V_new_3_i_phi_fu_239_p12 <= ap_phi_reg_pp0_iter0_openedPort_V_new_3_i_reg_236;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_currentPort_V_flag_4_i_reg_192 <= "X";
    ap_phi_reg_pp0_iter0_currentPort_V_new_4_i_reg_214 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_openedPort_V_new_3_i_reg_236 <= "XXXXXXXXXXXXXXXX";

    ap_predicate_op27_read_state1_assign_proc : process(tmp_i_nbreadreq_fu_122_p3, listenState)
    begin
                ap_predicate_op27_read_state1 <= ((tmp_i_nbreadreq_fu_122_p3 = ap_const_lv1_1) and (listenState = ap_const_lv2_2));
    end process;


    ap_predicate_op65_read_state1_assign_proc : process(tmp_9_i_nbreadreq_fu_150_p3, grp_nbreadreq_fu_158_p3, serverFsmState)
    begin
                ap_predicate_op65_read_state1 <= ((grp_nbreadreq_fu_158_p3 = ap_const_lv1_1) and (tmp_9_i_nbreadreq_fu_150_p3 = ap_const_lv1_1) and (serverFsmState = ap_const_lv1_0));
    end process;


    ap_predicate_op66_read_state1_assign_proc : process(tmp_9_i_nbreadreq_fu_150_p3, grp_nbreadreq_fu_158_p3, serverFsmState)
    begin
                ap_predicate_op66_read_state1 <= ((grp_nbreadreq_fu_158_p3 = ap_const_lv1_1) and (tmp_9_i_nbreadreq_fu_150_p3 = ap_const_lv1_1) and (serverFsmState = ap_const_lv1_0));
    end process;


    ap_predicate_op75_read_state1_assign_proc : process(grp_nbreadreq_fu_158_p3, serverFsmState)
    begin
                ap_predicate_op75_read_state1 <= ((grp_nbreadreq_fu_158_p3 = ap_const_lv1_1) and (serverFsmState = ap_const_lv1_1));
    end process;


    ap_predicate_op83_write_state2_assign_proc : process(tmp_7_i_reg_416, icmp_ln1068_reg_420)
    begin
                ap_predicate_op83_write_state2 <= ((icmp_ln1068_reg_420 = ap_const_lv1_0) and (tmp_7_i_reg_416 = ap_const_lv1_1));
    end process;


    ap_predicate_op85_write_state3_assign_proc : process(tmp_7_i_reg_416_pp0_iter1_reg, icmp_ln1068_reg_420_pp0_iter1_reg)
    begin
                ap_predicate_op85_write_state3 <= ((icmp_ln1068_reg_420_pp0_iter1_reg = ap_const_lv1_0) and (tmp_7_i_reg_416_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_258_p3 <= rxDataBuffer_dout(576 downto 576);
    grp_nbreadreq_fu_158_p3 <= (0=>(rxDataBuffer_empty_n), others=>'-');
    icmp_ln1064_fu_295_p2 <= "1" when (add_ln885_1_fu_289_p2 = usePort_dout) else "0";
    icmp_ln1068_fu_375_p2 <= "1" when (tmp_length_V_fu_365_p4 = ap_const_lv16_0) else "0";
    listenState_load_load_fu_266_p1 <= listenState;

    m_axis_listen_port_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, listenState_load_reg_404, listenState_load_reg_404_pp0_iter1_reg, ap_block_pp0_stage0, m_axis_listen_port_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (listenState_load_reg_404_pp0_iter1_reg = ap_const_lv2_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (listenState_load_reg_404 = ap_const_lv2_1)))) then 
            m_axis_listen_port_TDATA_blk_n <= m_axis_listen_port_TREADY_int_regslice;
        else 
            m_axis_listen_port_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    m_axis_listen_port_TVALID <= regslice_both_m_axis_listen_port_U_vld_out;

    m_axis_listen_port_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, listenState_load_reg_404, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (listenState_load_reg_404 = ap_const_lv2_1))) then 
            m_axis_listen_port_TVALID_int_regslice <= ap_const_logic_1;
        else 
            m_axis_listen_port_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    m_axis_read_package_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op83_write_state2, ap_predicate_op85_write_state3, ap_block_pp0_stage0, m_axis_read_package_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op85_write_state3 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op83_write_state2 = ap_const_boolean_1)))) then 
            m_axis_read_package_TDATA_blk_n <= m_axis_read_package_TREADY_int_regslice;
        else 
            m_axis_read_package_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    m_axis_read_package_TVALID <= regslice_both_m_axis_read_package_U_vld_out;

    m_axis_read_package_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op83_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op83_write_state2 = ap_const_boolean_1))) then 
            m_axis_read_package_TVALID_int_regslice <= ap_const_logic_1;
        else 
            m_axis_read_package_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    regBasePort_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, regBasePort_empty_n, ap_done_reg, ap_block_pp0_stage0)
    begin
        if (((ap_done_reg = ap_const_logic_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            regBasePort_blk_n <= regBasePort_empty_n;
        else 
            regBasePort_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    regBasePort_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            regBasePort_read <= ap_const_logic_1;
        else 
            regBasePort_read <= ap_const_logic_0;
        end if; 
    end process;


    runExperiment_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, runExperiment_empty_n, ap_done_reg, ap_block_pp0_stage0)
    begin
        if (((ap_done_reg = ap_const_logic_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            runExperiment_blk_n <= runExperiment_empty_n;
        else 
            runExperiment_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    runExperiment_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            runExperiment_read <= ap_const_logic_1;
        else 
            runExperiment_read <= ap_const_logic_0;
        end if; 
    end process;

    runExperiment_read_read_fu_116_p2 <= runExperiment_dout;

    rxDataBuffer_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, rxDataBuffer_empty_n, ap_predicate_op66_read_state1, ap_predicate_op75_read_state1, ap_done_reg, ap_block_pp0_stage0)
    begin
        if ((((ap_done_reg = ap_const_logic_0) and (ap_predicate_op75_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_done_reg = ap_const_logic_0) and (ap_predicate_op66_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            rxDataBuffer_blk_n <= rxDataBuffer_empty_n;
        else 
            rxDataBuffer_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rxDataBuffer_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op66_read_state1, ap_predicate_op75_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op75_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op66_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            rxDataBuffer_read <= ap_const_logic_1;
        else 
            rxDataBuffer_read <= ap_const_logic_0;
        end if; 
    end process;


    s_axis_listen_port_status_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op27_read_state1, ap_done_reg, ap_block_pp0_stage0, s_axis_listen_port_status_TVALID_int_regslice)
    begin
        if (((ap_done_reg = ap_const_logic_0) and (ap_predicate_op27_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            s_axis_listen_port_status_TDATA_blk_n <= s_axis_listen_port_status_TVALID_int_regslice;
        else 
            s_axis_listen_port_status_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    s_axis_listen_port_status_TREADY <= regslice_both_s_axis_listen_port_status_U_ack_in;

    s_axis_listen_port_status_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op27_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op27_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            s_axis_listen_port_status_TREADY_int_regslice <= ap_const_logic_1;
        else 
            s_axis_listen_port_status_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    s_axis_notifications_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_7_i_nbreadreq_fu_136_p3, ap_done_reg, ap_block_pp0_stage0, s_axis_notifications_TVALID_int_regslice)
    begin
        if (((ap_done_reg = ap_const_logic_0) and (tmp_7_i_nbreadreq_fu_136_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            s_axis_notifications_TDATA_blk_n <= s_axis_notifications_TVALID_int_regslice;
        else 
            s_axis_notifications_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    s_axis_notifications_TREADY <= regslice_both_s_axis_notifications_U_ack_in;

    s_axis_notifications_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_7_i_nbreadreq_fu_136_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_7_i_nbreadreq_fu_136_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            s_axis_notifications_TREADY_int_regslice <= ap_const_logic_1;
        else 
            s_axis_notifications_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    s_axis_rx_metadata_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op65_read_state1, ap_done_reg, ap_block_pp0_stage0, s_axis_rx_metadata_TVALID_int_regslice)
    begin
        if (((ap_done_reg = ap_const_logic_0) and (ap_predicate_op65_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            s_axis_rx_metadata_TDATA_blk_n <= s_axis_rx_metadata_TVALID_int_regslice;
        else 
            s_axis_rx_metadata_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    s_axis_rx_metadata_TREADY <= regslice_both_s_axis_rx_metadata_U_ack_in;

    s_axis_rx_metadata_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op65_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op65_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            s_axis_rx_metadata_TREADY_int_regslice <= ap_const_logic_1;
        else 
            s_axis_rx_metadata_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    select_ln435_1_fu_310_p3 <= 
        ap_const_lv16_0 when (icmp_ln1064_fu_295_p2(0) = '1') else 
        add_ln885_1_fu_289_p2;
    select_ln435_fu_301_p3 <= 
        ap_const_lv16_0 when (icmp_ln1064_fu_295_p2(0) = '1') else 
        add_ln885_fu_283_p2;
    tmp_7_i_nbreadreq_fu_136_p3 <= (0=>(s_axis_notifications_TVALID_int_regslice), others=>'-');
    tmp_9_i_nbreadreq_fu_150_p3 <= (0=>(s_axis_rx_metadata_TVALID_int_regslice), others=>'-');
    tmp_fu_278_p1 <= s_axis_listen_port_status_TDATA_int_regslice(1 - 1 downto 0);
    tmp_i_nbreadreq_fu_122_p3 <= (0=>(s_axis_listen_port_status_TVALID_int_regslice), others=>'-');
    tmp_length_V_fu_365_p4 <= s_axis_notifications_TDATA_int_regslice(31 downto 16);
    trunc_ln173_fu_381_p1 <= s_axis_notifications_TDATA_int_regslice(32 - 1 downto 0);

    usePort_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, usePort_empty_n, ap_done_reg, ap_block_pp0_stage0)
    begin
        if (((ap_done_reg = ap_const_logic_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            usePort_blk_n <= usePort_empty_n;
        else 
            usePort_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    usePort_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            usePort_read <= ap_const_logic_1;
        else 
            usePort_read <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln144_fu_325_p2 <= (ap_const_lv1_1 xor and_ln144_fu_319_p2);
    zext_ln427_fu_331_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln144_fu_325_p2),2));
end behav;
